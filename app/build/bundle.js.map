{"version":3,"file":"bundle.js","sources":["../../node_modules/svelte/internal/index.mjs","../../node_modules/tailwindcss/colors.js","../../src/util/ui/tailwind-dynamic-color-themes/util/check.js","../../src/util/ui/tailwind-dynamic-color-themes/util/typeCheck.js","../../src/util/ui/tailwind-dynamic-color-themes/initDCT.js","../../src/layout/colorTheme.js","../../node_modules/svelte/store/index.mjs","../../src/util/ui/Icon.svelte","../../src/layout/SideBar.svelte","../../src/layout/ThemeSelector.svelte","../../src/layout/ThemeInversionSelector.svelte","../../src/layout/NavBar.svelte","../../src/layout/AppContainer.svelte","../../src/main.js"],"sourcesContent":["function noop() { }\nconst identity = x => x;\nfunction assign(tar, src) {\n    // @ts-ignore\n    for (const k in src)\n        tar[k] = src[k];\n    return tar;\n}\nfunction is_promise(value) {\n    return value && typeof value === 'object' && typeof value.then === 'function';\n}\nfunction add_location(element, file, line, column, char) {\n    element.__svelte_meta = {\n        loc: { file, line, column, char }\n    };\n}\nfunction run(fn) {\n    return fn();\n}\nfunction blank_object() {\n    return Object.create(null);\n}\nfunction run_all(fns) {\n    fns.forEach(run);\n}\nfunction is_function(thing) {\n    return typeof thing === 'function';\n}\nfunction safe_not_equal(a, b) {\n    return a != a ? b == b : a !== b || ((a && typeof a === 'object') || typeof a === 'function');\n}\nfunction not_equal(a, b) {\n    return a != a ? b == b : a !== b;\n}\nfunction is_empty(obj) {\n    return Object.keys(obj).length === 0;\n}\nfunction validate_store(store, name) {\n    if (store != null && typeof store.subscribe !== 'function') {\n        throw new Error(`'${name}' is not a store with a 'subscribe' method`);\n    }\n}\nfunction subscribe(store, ...callbacks) {\n    if (store == null) {\n        return noop;\n    }\n    const unsub = store.subscribe(...callbacks);\n    return unsub.unsubscribe ? () => unsub.unsubscribe() : unsub;\n}\nfunction get_store_value(store) {\n    let value;\n    subscribe(store, _ => value = _)();\n    return value;\n}\nfunction component_subscribe(component, store, callback) {\n    component.$$.on_destroy.push(subscribe(store, callback));\n}\nfunction create_slot(definition, ctx, $$scope, fn) {\n    if (definition) {\n        const slot_ctx = get_slot_context(definition, ctx, $$scope, fn);\n        return definition[0](slot_ctx);\n    }\n}\nfunction get_slot_context(definition, ctx, $$scope, fn) {\n    return definition[1] && fn\n        ? assign($$scope.ctx.slice(), definition[1](fn(ctx)))\n        : $$scope.ctx;\n}\nfunction get_slot_changes(definition, $$scope, dirty, fn) {\n    if (definition[2] && fn) {\n        const lets = definition[2](fn(dirty));\n        if ($$scope.dirty === undefined) {\n            return lets;\n        }\n        if (typeof lets === 'object') {\n            const merged = [];\n            const len = Math.max($$scope.dirty.length, lets.length);\n            for (let i = 0; i < len; i += 1) {\n                merged[i] = $$scope.dirty[i] | lets[i];\n            }\n            return merged;\n        }\n        return $$scope.dirty | lets;\n    }\n    return $$scope.dirty;\n}\nfunction update_slot(slot, slot_definition, ctx, $$scope, dirty, get_slot_changes_fn, get_slot_context_fn) {\n    const slot_changes = get_slot_changes(slot_definition, $$scope, dirty, get_slot_changes_fn);\n    if (slot_changes) {\n        const slot_context = get_slot_context(slot_definition, ctx, $$scope, get_slot_context_fn);\n        slot.p(slot_context, slot_changes);\n    }\n}\nfunction update_slot_spread(slot, slot_definition, ctx, $$scope, dirty, get_slot_changes_fn, get_slot_spread_changes_fn, get_slot_context_fn) {\n    const slot_changes = get_slot_spread_changes_fn(dirty) | get_slot_changes(slot_definition, $$scope, dirty, get_slot_changes_fn);\n    if (slot_changes) {\n        const slot_context = get_slot_context(slot_definition, ctx, $$scope, get_slot_context_fn);\n        slot.p(slot_context, slot_changes);\n    }\n}\nfunction exclude_internal_props(props) {\n    const result = {};\n    for (const k in props)\n        if (k[0] !== '$')\n            result[k] = props[k];\n    return result;\n}\nfunction compute_rest_props(props, keys) {\n    const rest = {};\n    keys = new Set(keys);\n    for (const k in props)\n        if (!keys.has(k) && k[0] !== '$')\n            rest[k] = props[k];\n    return rest;\n}\nfunction compute_slots(slots) {\n    const result = {};\n    for (const key in slots) {\n        result[key] = true;\n    }\n    return result;\n}\nfunction once(fn) {\n    let ran = false;\n    return function (...args) {\n        if (ran)\n            return;\n        ran = true;\n        fn.call(this, ...args);\n    };\n}\nfunction null_to_empty(value) {\n    return value == null ? '' : value;\n}\nfunction set_store_value(store, ret, value = ret) {\n    store.set(value);\n    return ret;\n}\nconst has_prop = (obj, prop) => Object.prototype.hasOwnProperty.call(obj, prop);\nfunction action_destroyer(action_result) {\n    return action_result && is_function(action_result.destroy) ? action_result.destroy : noop;\n}\n\nconst is_client = typeof window !== 'undefined';\nlet now = is_client\n    ? () => window.performance.now()\n    : () => Date.now();\nlet raf = is_client ? cb => requestAnimationFrame(cb) : noop;\n// used internally for testing\nfunction set_now(fn) {\n    now = fn;\n}\nfunction set_raf(fn) {\n    raf = fn;\n}\n\nconst tasks = new Set();\nfunction run_tasks(now) {\n    tasks.forEach(task => {\n        if (!task.c(now)) {\n            tasks.delete(task);\n            task.f();\n        }\n    });\n    if (tasks.size !== 0)\n        raf(run_tasks);\n}\n/**\n * For testing purposes only!\n */\nfunction clear_loops() {\n    tasks.clear();\n}\n/**\n * Creates a new task that runs on each raf frame\n * until it returns a falsy value or is aborted\n */\nfunction loop(callback) {\n    let task;\n    if (tasks.size === 0)\n        raf(run_tasks);\n    return {\n        promise: new Promise(fulfill => {\n            tasks.add(task = { c: callback, f: fulfill });\n        }),\n        abort() {\n            tasks.delete(task);\n        }\n    };\n}\n\nfunction append(target, node) {\n    target.appendChild(node);\n}\nfunction insert(target, node, anchor) {\n    target.insertBefore(node, anchor || null);\n}\nfunction detach(node) {\n    node.parentNode.removeChild(node);\n}\nfunction destroy_each(iterations, detaching) {\n    for (let i = 0; i < iterations.length; i += 1) {\n        if (iterations[i])\n            iterations[i].d(detaching);\n    }\n}\nfunction element(name) {\n    return document.createElement(name);\n}\nfunction element_is(name, is) {\n    return document.createElement(name, { is });\n}\nfunction object_without_properties(obj, exclude) {\n    const target = {};\n    for (const k in obj) {\n        if (has_prop(obj, k)\n            // @ts-ignore\n            && exclude.indexOf(k) === -1) {\n            // @ts-ignore\n            target[k] = obj[k];\n        }\n    }\n    return target;\n}\nfunction svg_element(name) {\n    return document.createElementNS('http://www.w3.org/2000/svg', name);\n}\nfunction text(data) {\n    return document.createTextNode(data);\n}\nfunction space() {\n    return text(' ');\n}\nfunction empty() {\n    return text('');\n}\nfunction listen(node, event, handler, options) {\n    node.addEventListener(event, handler, options);\n    return () => node.removeEventListener(event, handler, options);\n}\nfunction prevent_default(fn) {\n    return function (event) {\n        event.preventDefault();\n        // @ts-ignore\n        return fn.call(this, event);\n    };\n}\nfunction stop_propagation(fn) {\n    return function (event) {\n        event.stopPropagation();\n        // @ts-ignore\n        return fn.call(this, event);\n    };\n}\nfunction self(fn) {\n    return function (event) {\n        // @ts-ignore\n        if (event.target === this)\n            fn.call(this, event);\n    };\n}\nfunction attr(node, attribute, value) {\n    if (value == null)\n        node.removeAttribute(attribute);\n    else if (node.getAttribute(attribute) !== value)\n        node.setAttribute(attribute, value);\n}\nfunction set_attributes(node, attributes) {\n    // @ts-ignore\n    const descriptors = Object.getOwnPropertyDescriptors(node.__proto__);\n    for (const key in attributes) {\n        if (attributes[key] == null) {\n            node.removeAttribute(key);\n        }\n        else if (key === 'style') {\n            node.style.cssText = attributes[key];\n        }\n        else if (key === '__value') {\n            node.value = node[key] = attributes[key];\n        }\n        else if (descriptors[key] && descriptors[key].set) {\n            node[key] = attributes[key];\n        }\n        else {\n            attr(node, key, attributes[key]);\n        }\n    }\n}\nfunction set_svg_attributes(node, attributes) {\n    for (const key in attributes) {\n        attr(node, key, attributes[key]);\n    }\n}\nfunction set_custom_element_data(node, prop, value) {\n    if (prop in node) {\n        node[prop] = value;\n    }\n    else {\n        attr(node, prop, value);\n    }\n}\nfunction xlink_attr(node, attribute, value) {\n    node.setAttributeNS('http://www.w3.org/1999/xlink', attribute, value);\n}\nfunction get_binding_group_value(group, __value, checked) {\n    const value = new Set();\n    for (let i = 0; i < group.length; i += 1) {\n        if (group[i].checked)\n            value.add(group[i].__value);\n    }\n    if (!checked) {\n        value.delete(__value);\n    }\n    return Array.from(value);\n}\nfunction to_number(value) {\n    return value === '' ? null : +value;\n}\nfunction time_ranges_to_array(ranges) {\n    const array = [];\n    for (let i = 0; i < ranges.length; i += 1) {\n        array.push({ start: ranges.start(i), end: ranges.end(i) });\n    }\n    return array;\n}\nfunction children(element) {\n    return Array.from(element.childNodes);\n}\nfunction claim_element(nodes, name, attributes, svg) {\n    for (let i = 0; i < nodes.length; i += 1) {\n        const node = nodes[i];\n        if (node.nodeName === name) {\n            let j = 0;\n            const remove = [];\n            while (j < node.attributes.length) {\n                const attribute = node.attributes[j++];\n                if (!attributes[attribute.name]) {\n                    remove.push(attribute.name);\n                }\n            }\n            for (let k = 0; k < remove.length; k++) {\n                node.removeAttribute(remove[k]);\n            }\n            return nodes.splice(i, 1)[0];\n        }\n    }\n    return svg ? svg_element(name) : element(name);\n}\nfunction claim_text(nodes, data) {\n    for (let i = 0; i < nodes.length; i += 1) {\n        const node = nodes[i];\n        if (node.nodeType === 3) {\n            node.data = '' + data;\n            return nodes.splice(i, 1)[0];\n        }\n    }\n    return text(data);\n}\nfunction claim_space(nodes) {\n    return claim_text(nodes, ' ');\n}\nfunction set_data(text, data) {\n    data = '' + data;\n    if (text.wholeText !== data)\n        text.data = data;\n}\nfunction set_input_value(input, value) {\n    input.value = value == null ? '' : value;\n}\nfunction set_input_type(input, type) {\n    try {\n        input.type = type;\n    }\n    catch (e) {\n        // do nothing\n    }\n}\nfunction set_style(node, key, value, important) {\n    node.style.setProperty(key, value, important ? 'important' : '');\n}\nfunction select_option(select, value) {\n    for (let i = 0; i < select.options.length; i += 1) {\n        const option = select.options[i];\n        if (option.__value === value) {\n            option.selected = true;\n            return;\n        }\n    }\n}\nfunction select_options(select, value) {\n    for (let i = 0; i < select.options.length; i += 1) {\n        const option = select.options[i];\n        option.selected = ~value.indexOf(option.__value);\n    }\n}\nfunction select_value(select) {\n    const selected_option = select.querySelector(':checked') || select.options[0];\n    return selected_option && selected_option.__value;\n}\nfunction select_multiple_value(select) {\n    return [].map.call(select.querySelectorAll(':checked'), option => option.__value);\n}\n// unfortunately this can't be a constant as that wouldn't be tree-shakeable\n// so we cache the result instead\nlet crossorigin;\nfunction is_crossorigin() {\n    if (crossorigin === undefined) {\n        crossorigin = false;\n        try {\n            if (typeof window !== 'undefined' && window.parent) {\n                void window.parent.document;\n            }\n        }\n        catch (error) {\n            crossorigin = true;\n        }\n    }\n    return crossorigin;\n}\nfunction add_resize_listener(node, fn) {\n    const computed_style = getComputedStyle(node);\n    if (computed_style.position === 'static') {\n        node.style.position = 'relative';\n    }\n    const iframe = element('iframe');\n    iframe.setAttribute('style', 'display: block; position: absolute; top: 0; left: 0; width: 100%; height: 100%; ' +\n        'overflow: hidden; border: 0; opacity: 0; pointer-events: none; z-index: -1;');\n    iframe.setAttribute('aria-hidden', 'true');\n    iframe.tabIndex = -1;\n    const crossorigin = is_crossorigin();\n    let unsubscribe;\n    if (crossorigin) {\n        iframe.src = \"data:text/html,<script>onresize=function(){parent.postMessage(0,'*')}</script>\";\n        unsubscribe = listen(window, 'message', (event) => {\n            if (event.source === iframe.contentWindow)\n                fn();\n        });\n    }\n    else {\n        iframe.src = 'about:blank';\n        iframe.onload = () => {\n            unsubscribe = listen(iframe.contentWindow, 'resize', fn);\n        };\n    }\n    append(node, iframe);\n    return () => {\n        if (crossorigin) {\n            unsubscribe();\n        }\n        else if (unsubscribe && iframe.contentWindow) {\n            unsubscribe();\n        }\n        detach(iframe);\n    };\n}\nfunction toggle_class(element, name, toggle) {\n    element.classList[toggle ? 'add' : 'remove'](name);\n}\nfunction custom_event(type, detail) {\n    const e = document.createEvent('CustomEvent');\n    e.initCustomEvent(type, false, false, detail);\n    return e;\n}\nfunction query_selector_all(selector, parent = document.body) {\n    return Array.from(parent.querySelectorAll(selector));\n}\nclass HtmlTag {\n    constructor(anchor = null) {\n        this.a = anchor;\n        this.e = this.n = null;\n    }\n    m(html, target, anchor = null) {\n        if (!this.e) {\n            this.e = element(target.nodeName);\n            this.t = target;\n            this.h(html);\n        }\n        this.i(anchor);\n    }\n    h(html) {\n        this.e.innerHTML = html;\n        this.n = Array.from(this.e.childNodes);\n    }\n    i(anchor) {\n        for (let i = 0; i < this.n.length; i += 1) {\n            insert(this.t, this.n[i], anchor);\n        }\n    }\n    p(html) {\n        this.d();\n        this.h(html);\n        this.i(this.a);\n    }\n    d() {\n        this.n.forEach(detach);\n    }\n}\nfunction attribute_to_object(attributes) {\n    const result = {};\n    for (const attribute of attributes) {\n        result[attribute.name] = attribute.value;\n    }\n    return result;\n}\nfunction get_custom_elements_slots(element) {\n    const result = {};\n    element.childNodes.forEach((node) => {\n        result[node.slot || 'default'] = true;\n    });\n    return result;\n}\n\nconst active_docs = new Set();\nlet active = 0;\n// https://github.com/darkskyapp/string-hash/blob/master/index.js\nfunction hash(str) {\n    let hash = 5381;\n    let i = str.length;\n    while (i--)\n        hash = ((hash << 5) - hash) ^ str.charCodeAt(i);\n    return hash >>> 0;\n}\nfunction create_rule(node, a, b, duration, delay, ease, fn, uid = 0) {\n    const step = 16.666 / duration;\n    let keyframes = '{\\n';\n    for (let p = 0; p <= 1; p += step) {\n        const t = a + (b - a) * ease(p);\n        keyframes += p * 100 + `%{${fn(t, 1 - t)}}\\n`;\n    }\n    const rule = keyframes + `100% {${fn(b, 1 - b)}}\\n}`;\n    const name = `__svelte_${hash(rule)}_${uid}`;\n    const doc = node.ownerDocument;\n    active_docs.add(doc);\n    const stylesheet = doc.__svelte_stylesheet || (doc.__svelte_stylesheet = doc.head.appendChild(element('style')).sheet);\n    const current_rules = doc.__svelte_rules || (doc.__svelte_rules = {});\n    if (!current_rules[name]) {\n        current_rules[name] = true;\n        stylesheet.insertRule(`@keyframes ${name} ${rule}`, stylesheet.cssRules.length);\n    }\n    const animation = node.style.animation || '';\n    node.style.animation = `${animation ? `${animation}, ` : ''}${name} ${duration}ms linear ${delay}ms 1 both`;\n    active += 1;\n    return name;\n}\nfunction delete_rule(node, name) {\n    const previous = (node.style.animation || '').split(', ');\n    const next = previous.filter(name\n        ? anim => anim.indexOf(name) < 0 // remove specific animation\n        : anim => anim.indexOf('__svelte') === -1 // remove all Svelte animations\n    );\n    const deleted = previous.length - next.length;\n    if (deleted) {\n        node.style.animation = next.join(', ');\n        active -= deleted;\n        if (!active)\n            clear_rules();\n    }\n}\nfunction clear_rules() {\n    raf(() => {\n        if (active)\n            return;\n        active_docs.forEach(doc => {\n            const stylesheet = doc.__svelte_stylesheet;\n            let i = stylesheet.cssRules.length;\n            while (i--)\n                stylesheet.deleteRule(i);\n            doc.__svelte_rules = {};\n        });\n        active_docs.clear();\n    });\n}\n\nfunction create_animation(node, from, fn, params) {\n    if (!from)\n        return noop;\n    const to = node.getBoundingClientRect();\n    if (from.left === to.left && from.right === to.right && from.top === to.top && from.bottom === to.bottom)\n        return noop;\n    const { delay = 0, duration = 300, easing = identity, \n    // @ts-ignore todo: should this be separated from destructuring? Or start/end added to public api and documentation?\n    start: start_time = now() + delay, \n    // @ts-ignore todo:\n    end = start_time + duration, tick = noop, css } = fn(node, { from, to }, params);\n    let running = true;\n    let started = false;\n    let name;\n    function start() {\n        if (css) {\n            name = create_rule(node, 0, 1, duration, delay, easing, css);\n        }\n        if (!delay) {\n            started = true;\n        }\n    }\n    function stop() {\n        if (css)\n            delete_rule(node, name);\n        running = false;\n    }\n    loop(now => {\n        if (!started && now >= start_time) {\n            started = true;\n        }\n        if (started && now >= end) {\n            tick(1, 0);\n            stop();\n        }\n        if (!running) {\n            return false;\n        }\n        if (started) {\n            const p = now - start_time;\n            const t = 0 + 1 * easing(p / duration);\n            tick(t, 1 - t);\n        }\n        return true;\n    });\n    start();\n    tick(0, 1);\n    return stop;\n}\nfunction fix_position(node) {\n    const style = getComputedStyle(node);\n    if (style.position !== 'absolute' && style.position !== 'fixed') {\n        const { width, height } = style;\n        const a = node.getBoundingClientRect();\n        node.style.position = 'absolute';\n        node.style.width = width;\n        node.style.height = height;\n        add_transform(node, a);\n    }\n}\nfunction add_transform(node, a) {\n    const b = node.getBoundingClientRect();\n    if (a.left !== b.left || a.top !== b.top) {\n        const style = getComputedStyle(node);\n        const transform = style.transform === 'none' ? '' : style.transform;\n        node.style.transform = `${transform} translate(${a.left - b.left}px, ${a.top - b.top}px)`;\n    }\n}\n\nlet current_component;\nfunction set_current_component(component) {\n    current_component = component;\n}\nfunction get_current_component() {\n    if (!current_component)\n        throw new Error('Function called outside component initialization');\n    return current_component;\n}\nfunction beforeUpdate(fn) {\n    get_current_component().$$.before_update.push(fn);\n}\nfunction onMount(fn) {\n    get_current_component().$$.on_mount.push(fn);\n}\nfunction afterUpdate(fn) {\n    get_current_component().$$.after_update.push(fn);\n}\nfunction onDestroy(fn) {\n    get_current_component().$$.on_destroy.push(fn);\n}\nfunction createEventDispatcher() {\n    const component = get_current_component();\n    return (type, detail) => {\n        const callbacks = component.$$.callbacks[type];\n        if (callbacks) {\n            // TODO are there situations where events could be dispatched\n            // in a server (non-DOM) environment?\n            const event = custom_event(type, detail);\n            callbacks.slice().forEach(fn => {\n                fn.call(component, event);\n            });\n        }\n    };\n}\nfunction setContext(key, context) {\n    get_current_component().$$.context.set(key, context);\n}\nfunction getContext(key) {\n    return get_current_component().$$.context.get(key);\n}\nfunction hasContext(key) {\n    return get_current_component().$$.context.has(key);\n}\n// TODO figure out if we still want to support\n// shorthand events, or if we want to implement\n// a real bubbling mechanism\nfunction bubble(component, event) {\n    const callbacks = component.$$.callbacks[event.type];\n    if (callbacks) {\n        callbacks.slice().forEach(fn => fn(event));\n    }\n}\n\nconst dirty_components = [];\nconst intros = { enabled: false };\nconst binding_callbacks = [];\nconst render_callbacks = [];\nconst flush_callbacks = [];\nconst resolved_promise = Promise.resolve();\nlet update_scheduled = false;\nfunction schedule_update() {\n    if (!update_scheduled) {\n        update_scheduled = true;\n        resolved_promise.then(flush);\n    }\n}\nfunction tick() {\n    schedule_update();\n    return resolved_promise;\n}\nfunction add_render_callback(fn) {\n    render_callbacks.push(fn);\n}\nfunction add_flush_callback(fn) {\n    flush_callbacks.push(fn);\n}\nlet flushing = false;\nconst seen_callbacks = new Set();\nfunction flush() {\n    if (flushing)\n        return;\n    flushing = true;\n    do {\n        // first, call beforeUpdate functions\n        // and update components\n        for (let i = 0; i < dirty_components.length; i += 1) {\n            const component = dirty_components[i];\n            set_current_component(component);\n            update(component.$$);\n        }\n        set_current_component(null);\n        dirty_components.length = 0;\n        while (binding_callbacks.length)\n            binding_callbacks.pop()();\n        // then, once components are updated, call\n        // afterUpdate functions. This may cause\n        // subsequent updates...\n        for (let i = 0; i < render_callbacks.length; i += 1) {\n            const callback = render_callbacks[i];\n            if (!seen_callbacks.has(callback)) {\n                // ...so guard against infinite loops\n                seen_callbacks.add(callback);\n                callback();\n            }\n        }\n        render_callbacks.length = 0;\n    } while (dirty_components.length);\n    while (flush_callbacks.length) {\n        flush_callbacks.pop()();\n    }\n    update_scheduled = false;\n    flushing = false;\n    seen_callbacks.clear();\n}\nfunction update($$) {\n    if ($$.fragment !== null) {\n        $$.update();\n        run_all($$.before_update);\n        const dirty = $$.dirty;\n        $$.dirty = [-1];\n        $$.fragment && $$.fragment.p($$.ctx, dirty);\n        $$.after_update.forEach(add_render_callback);\n    }\n}\n\nlet promise;\nfunction wait() {\n    if (!promise) {\n        promise = Promise.resolve();\n        promise.then(() => {\n            promise = null;\n        });\n    }\n    return promise;\n}\nfunction dispatch(node, direction, kind) {\n    node.dispatchEvent(custom_event(`${direction ? 'intro' : 'outro'}${kind}`));\n}\nconst outroing = new Set();\nlet outros;\nfunction group_outros() {\n    outros = {\n        r: 0,\n        c: [],\n        p: outros // parent group\n    };\n}\nfunction check_outros() {\n    if (!outros.r) {\n        run_all(outros.c);\n    }\n    outros = outros.p;\n}\nfunction transition_in(block, local) {\n    if (block && block.i) {\n        outroing.delete(block);\n        block.i(local);\n    }\n}\nfunction transition_out(block, local, detach, callback) {\n    if (block && block.o) {\n        if (outroing.has(block))\n            return;\n        outroing.add(block);\n        outros.c.push(() => {\n            outroing.delete(block);\n            if (callback) {\n                if (detach)\n                    block.d(1);\n                callback();\n            }\n        });\n        block.o(local);\n    }\n}\nconst null_transition = { duration: 0 };\nfunction create_in_transition(node, fn, params) {\n    let config = fn(node, params);\n    let running = false;\n    let animation_name;\n    let task;\n    let uid = 0;\n    function cleanup() {\n        if (animation_name)\n            delete_rule(node, animation_name);\n    }\n    function go() {\n        const { delay = 0, duration = 300, easing = identity, tick = noop, css } = config || null_transition;\n        if (css)\n            animation_name = create_rule(node, 0, 1, duration, delay, easing, css, uid++);\n        tick(0, 1);\n        const start_time = now() + delay;\n        const end_time = start_time + duration;\n        if (task)\n            task.abort();\n        running = true;\n        add_render_callback(() => dispatch(node, true, 'start'));\n        task = loop(now => {\n            if (running) {\n                if (now >= end_time) {\n                    tick(1, 0);\n                    dispatch(node, true, 'end');\n                    cleanup();\n                    return running = false;\n                }\n                if (now >= start_time) {\n                    const t = easing((now - start_time) / duration);\n                    tick(t, 1 - t);\n                }\n            }\n            return running;\n        });\n    }\n    let started = false;\n    return {\n        start() {\n            if (started)\n                return;\n            delete_rule(node);\n            if (is_function(config)) {\n                config = config();\n                wait().then(go);\n            }\n            else {\n                go();\n            }\n        },\n        invalidate() {\n            started = false;\n        },\n        end() {\n            if (running) {\n                cleanup();\n                running = false;\n            }\n        }\n    };\n}\nfunction create_out_transition(node, fn, params) {\n    let config = fn(node, params);\n    let running = true;\n    let animation_name;\n    const group = outros;\n    group.r += 1;\n    function go() {\n        const { delay = 0, duration = 300, easing = identity, tick = noop, css } = config || null_transition;\n        if (css)\n            animation_name = create_rule(node, 1, 0, duration, delay, easing, css);\n        const start_time = now() + delay;\n        const end_time = start_time + duration;\n        add_render_callback(() => dispatch(node, false, 'start'));\n        loop(now => {\n            if (running) {\n                if (now >= end_time) {\n                    tick(0, 1);\n                    dispatch(node, false, 'end');\n                    if (!--group.r) {\n                        // this will result in `end()` being called,\n                        // so we don't need to clean up here\n                        run_all(group.c);\n                    }\n                    return false;\n                }\n                if (now >= start_time) {\n                    const t = easing((now - start_time) / duration);\n                    tick(1 - t, t);\n                }\n            }\n            return running;\n        });\n    }\n    if (is_function(config)) {\n        wait().then(() => {\n            // @ts-ignore\n            config = config();\n            go();\n        });\n    }\n    else {\n        go();\n    }\n    return {\n        end(reset) {\n            if (reset && config.tick) {\n                config.tick(1, 0);\n            }\n            if (running) {\n                if (animation_name)\n                    delete_rule(node, animation_name);\n                running = false;\n            }\n        }\n    };\n}\nfunction create_bidirectional_transition(node, fn, params, intro) {\n    let config = fn(node, params);\n    let t = intro ? 0 : 1;\n    let running_program = null;\n    let pending_program = null;\n    let animation_name = null;\n    function clear_animation() {\n        if (animation_name)\n            delete_rule(node, animation_name);\n    }\n    function init(program, duration) {\n        const d = program.b - t;\n        duration *= Math.abs(d);\n        return {\n            a: t,\n            b: program.b,\n            d,\n            duration,\n            start: program.start,\n            end: program.start + duration,\n            group: program.group\n        };\n    }\n    function go(b) {\n        const { delay = 0, duration = 300, easing = identity, tick = noop, css } = config || null_transition;\n        const program = {\n            start: now() + delay,\n            b\n        };\n        if (!b) {\n            // @ts-ignore todo: improve typings\n            program.group = outros;\n            outros.r += 1;\n        }\n        if (running_program || pending_program) {\n            pending_program = program;\n        }\n        else {\n            // if this is an intro, and there's a delay, we need to do\n            // an initial tick and/or apply CSS animation immediately\n            if (css) {\n                clear_animation();\n                animation_name = create_rule(node, t, b, duration, delay, easing, css);\n            }\n            if (b)\n                tick(0, 1);\n            running_program = init(program, duration);\n            add_render_callback(() => dispatch(node, b, 'start'));\n            loop(now => {\n                if (pending_program && now > pending_program.start) {\n                    running_program = init(pending_program, duration);\n                    pending_program = null;\n                    dispatch(node, running_program.b, 'start');\n                    if (css) {\n                        clear_animation();\n                        animation_name = create_rule(node, t, running_program.b, running_program.duration, 0, easing, config.css);\n                    }\n                }\n                if (running_program) {\n                    if (now >= running_program.end) {\n                        tick(t = running_program.b, 1 - t);\n                        dispatch(node, running_program.b, 'end');\n                        if (!pending_program) {\n                            // we're done\n                            if (running_program.b) {\n                                // intro — we can tidy up immediately\n                                clear_animation();\n                            }\n                            else {\n                                // outro — needs to be coordinated\n                                if (!--running_program.group.r)\n                                    run_all(running_program.group.c);\n                            }\n                        }\n                        running_program = null;\n                    }\n                    else if (now >= running_program.start) {\n                        const p = now - running_program.start;\n                        t = running_program.a + running_program.d * easing(p / running_program.duration);\n                        tick(t, 1 - t);\n                    }\n                }\n                return !!(running_program || pending_program);\n            });\n        }\n    }\n    return {\n        run(b) {\n            if (is_function(config)) {\n                wait().then(() => {\n                    // @ts-ignore\n                    config = config();\n                    go(b);\n                });\n            }\n            else {\n                go(b);\n            }\n        },\n        end() {\n            clear_animation();\n            running_program = pending_program = null;\n        }\n    };\n}\n\nfunction handle_promise(promise, info) {\n    const token = info.token = {};\n    function update(type, index, key, value) {\n        if (info.token !== token)\n            return;\n        info.resolved = value;\n        let child_ctx = info.ctx;\n        if (key !== undefined) {\n            child_ctx = child_ctx.slice();\n            child_ctx[key] = value;\n        }\n        const block = type && (info.current = type)(child_ctx);\n        let needs_flush = false;\n        if (info.block) {\n            if (info.blocks) {\n                info.blocks.forEach((block, i) => {\n                    if (i !== index && block) {\n                        group_outros();\n                        transition_out(block, 1, 1, () => {\n                            if (info.blocks[i] === block) {\n                                info.blocks[i] = null;\n                            }\n                        });\n                        check_outros();\n                    }\n                });\n            }\n            else {\n                info.block.d(1);\n            }\n            block.c();\n            transition_in(block, 1);\n            block.m(info.mount(), info.anchor);\n            needs_flush = true;\n        }\n        info.block = block;\n        if (info.blocks)\n            info.blocks[index] = block;\n        if (needs_flush) {\n            flush();\n        }\n    }\n    if (is_promise(promise)) {\n        const current_component = get_current_component();\n        promise.then(value => {\n            set_current_component(current_component);\n            update(info.then, 1, info.value, value);\n            set_current_component(null);\n        }, error => {\n            set_current_component(current_component);\n            update(info.catch, 2, info.error, error);\n            set_current_component(null);\n            if (!info.hasCatch) {\n                throw error;\n            }\n        });\n        // if we previously had a then/catch block, destroy it\n        if (info.current !== info.pending) {\n            update(info.pending, 0);\n            return true;\n        }\n    }\n    else {\n        if (info.current !== info.then) {\n            update(info.then, 1, info.value, promise);\n            return true;\n        }\n        info.resolved = promise;\n    }\n}\n\nconst globals = (typeof window !== 'undefined'\n    ? window\n    : typeof globalThis !== 'undefined'\n        ? globalThis\n        : global);\n\nfunction destroy_block(block, lookup) {\n    block.d(1);\n    lookup.delete(block.key);\n}\nfunction outro_and_destroy_block(block, lookup) {\n    transition_out(block, 1, 1, () => {\n        lookup.delete(block.key);\n    });\n}\nfunction fix_and_destroy_block(block, lookup) {\n    block.f();\n    destroy_block(block, lookup);\n}\nfunction fix_and_outro_and_destroy_block(block, lookup) {\n    block.f();\n    outro_and_destroy_block(block, lookup);\n}\nfunction update_keyed_each(old_blocks, dirty, get_key, dynamic, ctx, list, lookup, node, destroy, create_each_block, next, get_context) {\n    let o = old_blocks.length;\n    let n = list.length;\n    let i = o;\n    const old_indexes = {};\n    while (i--)\n        old_indexes[old_blocks[i].key] = i;\n    const new_blocks = [];\n    const new_lookup = new Map();\n    const deltas = new Map();\n    i = n;\n    while (i--) {\n        const child_ctx = get_context(ctx, list, i);\n        const key = get_key(child_ctx);\n        let block = lookup.get(key);\n        if (!block) {\n            block = create_each_block(key, child_ctx);\n            block.c();\n        }\n        else if (dynamic) {\n            block.p(child_ctx, dirty);\n        }\n        new_lookup.set(key, new_blocks[i] = block);\n        if (key in old_indexes)\n            deltas.set(key, Math.abs(i - old_indexes[key]));\n    }\n    const will_move = new Set();\n    const did_move = new Set();\n    function insert(block) {\n        transition_in(block, 1);\n        block.m(node, next);\n        lookup.set(block.key, block);\n        next = block.first;\n        n--;\n    }\n    while (o && n) {\n        const new_block = new_blocks[n - 1];\n        const old_block = old_blocks[o - 1];\n        const new_key = new_block.key;\n        const old_key = old_block.key;\n        if (new_block === old_block) {\n            // do nothing\n            next = new_block.first;\n            o--;\n            n--;\n        }\n        else if (!new_lookup.has(old_key)) {\n            // remove old block\n            destroy(old_block, lookup);\n            o--;\n        }\n        else if (!lookup.has(new_key) || will_move.has(new_key)) {\n            insert(new_block);\n        }\n        else if (did_move.has(old_key)) {\n            o--;\n        }\n        else if (deltas.get(new_key) > deltas.get(old_key)) {\n            did_move.add(new_key);\n            insert(new_block);\n        }\n        else {\n            will_move.add(old_key);\n            o--;\n        }\n    }\n    while (o--) {\n        const old_block = old_blocks[o];\n        if (!new_lookup.has(old_block.key))\n            destroy(old_block, lookup);\n    }\n    while (n)\n        insert(new_blocks[n - 1]);\n    return new_blocks;\n}\nfunction validate_each_keys(ctx, list, get_context, get_key) {\n    const keys = new Set();\n    for (let i = 0; i < list.length; i++) {\n        const key = get_key(get_context(ctx, list, i));\n        if (keys.has(key)) {\n            throw new Error('Cannot have duplicate keys in a keyed each');\n        }\n        keys.add(key);\n    }\n}\n\nfunction get_spread_update(levels, updates) {\n    const update = {};\n    const to_null_out = {};\n    const accounted_for = { $$scope: 1 };\n    let i = levels.length;\n    while (i--) {\n        const o = levels[i];\n        const n = updates[i];\n        if (n) {\n            for (const key in o) {\n                if (!(key in n))\n                    to_null_out[key] = 1;\n            }\n            for (const key in n) {\n                if (!accounted_for[key]) {\n                    update[key] = n[key];\n                    accounted_for[key] = 1;\n                }\n            }\n            levels[i] = n;\n        }\n        else {\n            for (const key in o) {\n                accounted_for[key] = 1;\n            }\n        }\n    }\n    for (const key in to_null_out) {\n        if (!(key in update))\n            update[key] = undefined;\n    }\n    return update;\n}\nfunction get_spread_object(spread_props) {\n    return typeof spread_props === 'object' && spread_props !== null ? spread_props : {};\n}\n\n// source: https://html.spec.whatwg.org/multipage/indices.html\nconst boolean_attributes = new Set([\n    'allowfullscreen',\n    'allowpaymentrequest',\n    'async',\n    'autofocus',\n    'autoplay',\n    'checked',\n    'controls',\n    'default',\n    'defer',\n    'disabled',\n    'formnovalidate',\n    'hidden',\n    'ismap',\n    'loop',\n    'multiple',\n    'muted',\n    'nomodule',\n    'novalidate',\n    'open',\n    'playsinline',\n    'readonly',\n    'required',\n    'reversed',\n    'selected'\n]);\n\nconst invalid_attribute_name_character = /[\\s'\">/=\\u{FDD0}-\\u{FDEF}\\u{FFFE}\\u{FFFF}\\u{1FFFE}\\u{1FFFF}\\u{2FFFE}\\u{2FFFF}\\u{3FFFE}\\u{3FFFF}\\u{4FFFE}\\u{4FFFF}\\u{5FFFE}\\u{5FFFF}\\u{6FFFE}\\u{6FFFF}\\u{7FFFE}\\u{7FFFF}\\u{8FFFE}\\u{8FFFF}\\u{9FFFE}\\u{9FFFF}\\u{AFFFE}\\u{AFFFF}\\u{BFFFE}\\u{BFFFF}\\u{CFFFE}\\u{CFFFF}\\u{DFFFE}\\u{DFFFF}\\u{EFFFE}\\u{EFFFF}\\u{FFFFE}\\u{FFFFF}\\u{10FFFE}\\u{10FFFF}]/u;\n// https://html.spec.whatwg.org/multipage/syntax.html#attributes-2\n// https://infra.spec.whatwg.org/#noncharacter\nfunction spread(args, classes_to_add) {\n    const attributes = Object.assign({}, ...args);\n    if (classes_to_add) {\n        if (attributes.class == null) {\n            attributes.class = classes_to_add;\n        }\n        else {\n            attributes.class += ' ' + classes_to_add;\n        }\n    }\n    let str = '';\n    Object.keys(attributes).forEach(name => {\n        if (invalid_attribute_name_character.test(name))\n            return;\n        const value = attributes[name];\n        if (value === true)\n            str += ' ' + name;\n        else if (boolean_attributes.has(name.toLowerCase())) {\n            if (value)\n                str += ' ' + name;\n        }\n        else if (value != null) {\n            str += ` ${name}=\"${String(value).replace(/\"/g, '&#34;').replace(/'/g, '&#39;')}\"`;\n        }\n    });\n    return str;\n}\nconst escaped = {\n    '\"': '&quot;',\n    \"'\": '&#39;',\n    '&': '&amp;',\n    '<': '&lt;',\n    '>': '&gt;'\n};\nfunction escape(html) {\n    return String(html).replace(/[\"'&<>]/g, match => escaped[match]);\n}\nfunction each(items, fn) {\n    let str = '';\n    for (let i = 0; i < items.length; i += 1) {\n        str += fn(items[i], i);\n    }\n    return str;\n}\nconst missing_component = {\n    $$render: () => ''\n};\nfunction validate_component(component, name) {\n    if (!component || !component.$$render) {\n        if (name === 'svelte:component')\n            name += ' this={...}';\n        throw new Error(`<${name}> is not a valid SSR component. You may need to review your build config to ensure that dependencies are compiled, rather than imported as pre-compiled modules`);\n    }\n    return component;\n}\nfunction debug(file, line, column, values) {\n    console.log(`{@debug} ${file ? file + ' ' : ''}(${line}:${column})`); // eslint-disable-line no-console\n    console.log(values); // eslint-disable-line no-console\n    return '';\n}\nlet on_destroy;\nfunction create_ssr_component(fn) {\n    function $$render(result, props, bindings, slots) {\n        const parent_component = current_component;\n        const $$ = {\n            on_destroy,\n            context: new Map(parent_component ? parent_component.$$.context : []),\n            // these will be immediately discarded\n            on_mount: [],\n            before_update: [],\n            after_update: [],\n            callbacks: blank_object()\n        };\n        set_current_component({ $$ });\n        const html = fn(result, props, bindings, slots);\n        set_current_component(parent_component);\n        return html;\n    }\n    return {\n        render: (props = {}, options = {}) => {\n            on_destroy = [];\n            const result = { title: '', head: '', css: new Set() };\n            const html = $$render(result, props, {}, options);\n            run_all(on_destroy);\n            return {\n                html,\n                css: {\n                    code: Array.from(result.css).map(css => css.code).join('\\n'),\n                    map: null // TODO\n                },\n                head: result.title + result.head\n            };\n        },\n        $$render\n    };\n}\nfunction add_attribute(name, value, boolean) {\n    if (value == null || (boolean && !value))\n        return '';\n    return ` ${name}${value === true ? '' : `=${typeof value === 'string' ? JSON.stringify(escape(value)) : `\"${value}\"`}`}`;\n}\nfunction add_classes(classes) {\n    return classes ? ` class=\"${classes}\"` : '';\n}\n\nfunction bind(component, name, callback) {\n    const index = component.$$.props[name];\n    if (index !== undefined) {\n        component.$$.bound[index] = callback;\n        callback(component.$$.ctx[index]);\n    }\n}\nfunction create_component(block) {\n    block && block.c();\n}\nfunction claim_component(block, parent_nodes) {\n    block && block.l(parent_nodes);\n}\nfunction mount_component(component, target, anchor) {\n    const { fragment, on_mount, on_destroy, after_update } = component.$$;\n    fragment && fragment.m(target, anchor);\n    // onMount happens before the initial afterUpdate\n    add_render_callback(() => {\n        const new_on_destroy = on_mount.map(run).filter(is_function);\n        if (on_destroy) {\n            on_destroy.push(...new_on_destroy);\n        }\n        else {\n            // Edge case - component was destroyed immediately,\n            // most likely as a result of a binding initialising\n            run_all(new_on_destroy);\n        }\n        component.$$.on_mount = [];\n    });\n    after_update.forEach(add_render_callback);\n}\nfunction destroy_component(component, detaching) {\n    const $$ = component.$$;\n    if ($$.fragment !== null) {\n        run_all($$.on_destroy);\n        $$.fragment && $$.fragment.d(detaching);\n        // TODO null out other refs, including component.$$ (but need to\n        // preserve final state?)\n        $$.on_destroy = $$.fragment = null;\n        $$.ctx = [];\n    }\n}\nfunction make_dirty(component, i) {\n    if (component.$$.dirty[0] === -1) {\n        dirty_components.push(component);\n        schedule_update();\n        component.$$.dirty.fill(0);\n    }\n    component.$$.dirty[(i / 31) | 0] |= (1 << (i % 31));\n}\nfunction init(component, options, instance, create_fragment, not_equal, props, dirty = [-1]) {\n    const parent_component = current_component;\n    set_current_component(component);\n    const $$ = component.$$ = {\n        fragment: null,\n        ctx: null,\n        // state\n        props,\n        update: noop,\n        not_equal,\n        bound: blank_object(),\n        // lifecycle\n        on_mount: [],\n        on_destroy: [],\n        before_update: [],\n        after_update: [],\n        context: new Map(parent_component ? parent_component.$$.context : []),\n        // everything else\n        callbacks: blank_object(),\n        dirty,\n        skip_bound: false\n    };\n    let ready = false;\n    $$.ctx = instance\n        ? instance(component, options.props || {}, (i, ret, ...rest) => {\n            const value = rest.length ? rest[0] : ret;\n            if ($$.ctx && not_equal($$.ctx[i], $$.ctx[i] = value)) {\n                if (!$$.skip_bound && $$.bound[i])\n                    $$.bound[i](value);\n                if (ready)\n                    make_dirty(component, i);\n            }\n            return ret;\n        })\n        : [];\n    $$.update();\n    ready = true;\n    run_all($$.before_update);\n    // `false` as a special case of no DOM component\n    $$.fragment = create_fragment ? create_fragment($$.ctx) : false;\n    if (options.target) {\n        if (options.hydrate) {\n            const nodes = children(options.target);\n            // eslint-disable-next-line @typescript-eslint/no-non-null-assertion\n            $$.fragment && $$.fragment.l(nodes);\n            nodes.forEach(detach);\n        }\n        else {\n            // eslint-disable-next-line @typescript-eslint/no-non-null-assertion\n            $$.fragment && $$.fragment.c();\n        }\n        if (options.intro)\n            transition_in(component.$$.fragment);\n        mount_component(component, options.target, options.anchor);\n        flush();\n    }\n    set_current_component(parent_component);\n}\nlet SvelteElement;\nif (typeof HTMLElement === 'function') {\n    SvelteElement = class extends HTMLElement {\n        constructor() {\n            super();\n            this.attachShadow({ mode: 'open' });\n        }\n        connectedCallback() {\n            // @ts-ignore todo: improve typings\n            for (const key in this.$$.slotted) {\n                // @ts-ignore todo: improve typings\n                this.appendChild(this.$$.slotted[key]);\n            }\n        }\n        attributeChangedCallback(attr, _oldValue, newValue) {\n            this[attr] = newValue;\n        }\n        $destroy() {\n            destroy_component(this, 1);\n            this.$destroy = noop;\n        }\n        $on(type, callback) {\n            // TODO should this delegate to addEventListener?\n            const callbacks = (this.$$.callbacks[type] || (this.$$.callbacks[type] = []));\n            callbacks.push(callback);\n            return () => {\n                const index = callbacks.indexOf(callback);\n                if (index !== -1)\n                    callbacks.splice(index, 1);\n            };\n        }\n        $set($$props) {\n            if (this.$$set && !is_empty($$props)) {\n                this.$$.skip_bound = true;\n                this.$$set($$props);\n                this.$$.skip_bound = false;\n            }\n        }\n    };\n}\n/**\n * Base class for Svelte components. Used when dev=false.\n */\nclass SvelteComponent {\n    $destroy() {\n        destroy_component(this, 1);\n        this.$destroy = noop;\n    }\n    $on(type, callback) {\n        const callbacks = (this.$$.callbacks[type] || (this.$$.callbacks[type] = []));\n        callbacks.push(callback);\n        return () => {\n            const index = callbacks.indexOf(callback);\n            if (index !== -1)\n                callbacks.splice(index, 1);\n        };\n    }\n    $set($$props) {\n        if (this.$$set && !is_empty($$props)) {\n            this.$$.skip_bound = true;\n            this.$$set($$props);\n            this.$$.skip_bound = false;\n        }\n    }\n}\n\nfunction dispatch_dev(type, detail) {\n    document.dispatchEvent(custom_event(type, Object.assign({ version: '3.32.3' }, detail)));\n}\nfunction append_dev(target, node) {\n    dispatch_dev('SvelteDOMInsert', { target, node });\n    append(target, node);\n}\nfunction insert_dev(target, node, anchor) {\n    dispatch_dev('SvelteDOMInsert', { target, node, anchor });\n    insert(target, node, anchor);\n}\nfunction detach_dev(node) {\n    dispatch_dev('SvelteDOMRemove', { node });\n    detach(node);\n}\nfunction detach_between_dev(before, after) {\n    while (before.nextSibling && before.nextSibling !== after) {\n        detach_dev(before.nextSibling);\n    }\n}\nfunction detach_before_dev(after) {\n    while (after.previousSibling) {\n        detach_dev(after.previousSibling);\n    }\n}\nfunction detach_after_dev(before) {\n    while (before.nextSibling) {\n        detach_dev(before.nextSibling);\n    }\n}\nfunction listen_dev(node, event, handler, options, has_prevent_default, has_stop_propagation) {\n    const modifiers = options === true ? ['capture'] : options ? Array.from(Object.keys(options)) : [];\n    if (has_prevent_default)\n        modifiers.push('preventDefault');\n    if (has_stop_propagation)\n        modifiers.push('stopPropagation');\n    dispatch_dev('SvelteDOMAddEventListener', { node, event, handler, modifiers });\n    const dispose = listen(node, event, handler, options);\n    return () => {\n        dispatch_dev('SvelteDOMRemoveEventListener', { node, event, handler, modifiers });\n        dispose();\n    };\n}\nfunction attr_dev(node, attribute, value) {\n    attr(node, attribute, value);\n    if (value == null)\n        dispatch_dev('SvelteDOMRemoveAttribute', { node, attribute });\n    else\n        dispatch_dev('SvelteDOMSetAttribute', { node, attribute, value });\n}\nfunction prop_dev(node, property, value) {\n    node[property] = value;\n    dispatch_dev('SvelteDOMSetProperty', { node, property, value });\n}\nfunction dataset_dev(node, property, value) {\n    node.dataset[property] = value;\n    dispatch_dev('SvelteDOMSetDataset', { node, property, value });\n}\nfunction set_data_dev(text, data) {\n    data = '' + data;\n    if (text.wholeText === data)\n        return;\n    dispatch_dev('SvelteDOMSetData', { node: text, data });\n    text.data = data;\n}\nfunction validate_each_argument(arg) {\n    if (typeof arg !== 'string' && !(arg && typeof arg === 'object' && 'length' in arg)) {\n        let msg = '{#each} only iterates over array-like objects.';\n        if (typeof Symbol === 'function' && arg && Symbol.iterator in arg) {\n            msg += ' You can use a spread to convert this iterable into an array.';\n        }\n        throw new Error(msg);\n    }\n}\nfunction validate_slots(name, slot, keys) {\n    for (const slot_key of Object.keys(slot)) {\n        if (!~keys.indexOf(slot_key)) {\n            console.warn(`<${name}> received an unexpected slot \"${slot_key}\".`);\n        }\n    }\n}\n/**\n * Base class for Svelte components with some minor dev-enhancements. Used when dev=true.\n */\nclass SvelteComponentDev extends SvelteComponent {\n    constructor(options) {\n        if (!options || (!options.target && !options.$$inline)) {\n            throw new Error(\"'target' is a required option\");\n        }\n        super();\n    }\n    $destroy() {\n        super.$destroy();\n        this.$destroy = () => {\n            console.warn('Component was already destroyed'); // eslint-disable-line no-console\n        };\n    }\n    $capture_state() { }\n    $inject_state() { }\n}\n/**\n * Base class to create strongly typed Svelte components.\n * This only exists for typing purposes and should be used in `.d.ts` files.\n *\n * ### Example:\n *\n * You have component library on npm called `component-library`, from which\n * you export a component called `MyComponent`. For Svelte+TypeScript users,\n * you want to provide typings. Therefore you create a `index.d.ts`:\n * ```ts\n * import { SvelteComponentTyped } from \"svelte\";\n * export class MyComponent extends SvelteComponentTyped<{foo: string}> {}\n * ```\n * Typing this makes it possible for IDEs like VS Code with the Svelte extension\n * to provide intellisense and to use the component like this in a Svelte file\n * with TypeScript:\n * ```svelte\n * <script lang=\"ts\">\n * \timport { MyComponent } from \"component-library\";\n * </script>\n * <MyComponent foo={'bar'} />\n * ```\n *\n * #### Why not make this part of `SvelteComponent(Dev)`?\n * Because\n * ```ts\n * class ASubclassOfSvelteComponent extends SvelteComponent<{foo: string}> {}\n * const component: typeof SvelteComponent = ASubclassOfSvelteComponent;\n * ```\n * will throw a type error, so we need to seperate the more strictly typed class.\n */\nclass SvelteComponentTyped extends SvelteComponentDev {\n    constructor(options) {\n        super(options);\n    }\n}\nfunction loop_guard(timeout) {\n    const start = Date.now();\n    return () => {\n        if (Date.now() - start > timeout) {\n            throw new Error('Infinite loop detected');\n        }\n    };\n}\n\nexport { HtmlTag, SvelteComponent, SvelteComponentDev, SvelteComponentTyped, SvelteElement, action_destroyer, add_attribute, add_classes, add_flush_callback, add_location, add_render_callback, add_resize_listener, add_transform, afterUpdate, append, append_dev, assign, attr, attr_dev, attribute_to_object, beforeUpdate, bind, binding_callbacks, blank_object, bubble, check_outros, children, claim_component, claim_element, claim_space, claim_text, clear_loops, component_subscribe, compute_rest_props, compute_slots, createEventDispatcher, create_animation, create_bidirectional_transition, create_component, create_in_transition, create_out_transition, create_slot, create_ssr_component, current_component, custom_event, dataset_dev, debug, destroy_block, destroy_component, destroy_each, detach, detach_after_dev, detach_before_dev, detach_between_dev, detach_dev, dirty_components, dispatch_dev, each, element, element_is, empty, escape, escaped, exclude_internal_props, fix_and_destroy_block, fix_and_outro_and_destroy_block, fix_position, flush, getContext, get_binding_group_value, get_current_component, get_custom_elements_slots, get_slot_changes, get_slot_context, get_spread_object, get_spread_update, get_store_value, globals, group_outros, handle_promise, hasContext, has_prop, identity, init, insert, insert_dev, intros, invalid_attribute_name_character, is_client, is_crossorigin, is_empty, is_function, is_promise, listen, listen_dev, loop, loop_guard, missing_component, mount_component, noop, not_equal, now, null_to_empty, object_without_properties, onDestroy, onMount, once, outro_and_destroy_block, prevent_default, prop_dev, query_selector_all, raf, run, run_all, safe_not_equal, schedule_update, select_multiple_value, select_option, select_options, select_value, self, setContext, set_attributes, set_current_component, set_custom_element_data, set_data, set_data_dev, set_input_type, set_input_value, set_now, set_raf, set_store_value, set_style, set_svg_attributes, space, spread, stop_propagation, subscribe, svg_element, text, tick, time_ranges_to_array, to_number, toggle_class, transition_in, transition_out, update_keyed_each, update_slot, update_slot_spread, validate_component, validate_each_argument, validate_each_keys, validate_slots, validate_store, xlink_attr };\n","module.exports = {\n  black: '#000',\n  white: '#fff',\n  rose: {\n    50: '#fff1f2',\n    100: '#ffe4e6',\n    200: '#fecdd3',\n    300: '#fda4af',\n    400: '#fb7185',\n    500: '#f43f5e',\n    600: '#e11d48',\n    700: '#be123c',\n    800: '#9f1239',\n    900: '#881337',\n  },\n  pink: {\n    50: '#fdf2f8',\n    100: '#fce7f3',\n    200: '#fbcfe8',\n    300: '#f9a8d4',\n    400: '#f472b6',\n    500: '#ec4899',\n    600: '#db2777',\n    700: '#be185d',\n    800: '#9d174d',\n    900: '#831843',\n  },\n  fuchsia: {\n    50: '#fdf4ff',\n    100: '#fae8ff',\n    200: '#f5d0fe',\n    300: '#f0abfc',\n    400: '#e879f9',\n    500: '#d946ef',\n    600: '#c026d3',\n    700: '#a21caf',\n    800: '#86198f',\n    900: '#701a75',\n  },\n  purple: {\n    50: '#faf5ff',\n    100: '#f3e8ff',\n    200: '#e9d5ff',\n    300: '#d8b4fe',\n    400: '#c084fc',\n    500: '#a855f7',\n    600: '#9333ea',\n    700: '#7e22ce',\n    800: '#6b21a8',\n    900: '#581c87',\n  },\n  violet: {\n    50: '#f5f3ff',\n    100: '#ede9fe',\n    200: '#ddd6fe',\n    300: '#c4b5fd',\n    400: '#a78bfa',\n    500: '#8b5cf6',\n    600: '#7c3aed',\n    700: '#6d28d9',\n    800: '#5b21b6',\n    900: '#4c1d95',\n  },\n  indigo: {\n    50: '#eef2ff',\n    100: '#e0e7ff',\n    200: '#c7d2fe',\n    300: '#a5b4fc',\n    400: '#818cf8',\n    500: '#6366f1',\n    600: '#4f46e5',\n    700: '#4338ca',\n    800: '#3730a3',\n    900: '#312e81',\n  },\n  blue: {\n    50: '#eff6ff',\n    100: '#dbeafe',\n    200: '#bfdbfe',\n    300: '#93c5fd',\n    400: '#60a5fa',\n    500: '#3b82f6',\n    600: '#2563eb',\n    700: '#1d4ed8',\n    800: '#1e40af',\n    900: '#1e3a8a',\n  },\n  lightBlue: {\n    50: '#f0f9ff',\n    100: '#e0f2fe',\n    200: '#bae6fd',\n    300: '#7dd3fc',\n    400: '#38bdf8',\n    500: '#0ea5e9',\n    600: '#0284c7',\n    700: '#0369a1',\n    800: '#075985',\n    900: '#0c4a6e',\n  },\n  cyan: {\n    50: '#ecfeff',\n    100: '#cffafe',\n    200: '#a5f3fc',\n    300: '#67e8f9',\n    400: '#22d3ee',\n    500: '#06b6d4',\n    600: '#0891b2',\n    700: '#0e7490',\n    800: '#155e75',\n    900: '#164e63',\n  },\n  teal: {\n    50: '#f0fdfa',\n    100: '#ccfbf1',\n    200: '#99f6e4',\n    300: '#5eead4',\n    400: '#2dd4bf',\n    500: '#14b8a6',\n    600: '#0d9488',\n    700: '#0f766e',\n    800: '#115e59',\n    900: '#134e4a',\n  },\n  emerald: {\n    50: '#ecfdf5',\n    100: '#d1fae5',\n    200: '#a7f3d0',\n    300: '#6ee7b7',\n    400: '#34d399',\n    500: '#10b981',\n    600: '#059669',\n    700: '#047857',\n    800: '#065f46',\n    900: '#064e3b',\n  },\n  green: {\n    50: '#f0fdf4',\n    100: '#dcfce7',\n    200: '#bbf7d0',\n    300: '#86efac',\n    400: '#4ade80',\n    500: '#22c55e',\n    600: '#16a34a',\n    700: '#15803d',\n    800: '#166534',\n    900: '#14532d',\n  },\n  lime: {\n    50: '#f7fee7',\n    100: '#ecfccb',\n    200: '#d9f99d',\n    300: '#bef264',\n    400: '#a3e635',\n    500: '#84cc16',\n    600: '#65a30d',\n    700: '#4d7c0f',\n    800: '#3f6212',\n    900: '#365314',\n  },\n  yellow: {\n    50: '#fefce8',\n    100: '#fef9c3',\n    200: '#fef08a',\n    300: '#fde047',\n    400: '#facc15',\n    500: '#eab308',\n    600: '#ca8a04',\n    700: '#a16207',\n    800: '#854d0e',\n    900: '#713f12',\n  },\n  amber: {\n    50: '#fffbeb',\n    100: '#fef3c7',\n    200: '#fde68a',\n    300: '#fcd34d',\n    400: '#fbbf24',\n    500: '#f59e0b',\n    600: '#d97706',\n    700: '#b45309',\n    800: '#92400e',\n    900: '#78350f',\n  },\n  orange: {\n    50: '#fff7ed',\n    100: '#ffedd5',\n    200: '#fed7aa',\n    300: '#fdba74',\n    400: '#fb923c',\n    500: '#f97316',\n    600: '#ea580c',\n    700: '#c2410c',\n    800: '#9a3412',\n    900: '#7c2d12',\n  },\n  red: {\n    50: '#fef2f2',\n    100: '#fee2e2',\n    200: '#fecaca',\n    300: '#fca5a5',\n    400: '#f87171',\n    500: '#ef4444',\n    600: '#dc2626',\n    700: '#b91c1c',\n    800: '#991b1b',\n    900: '#7f1d1d',\n  },\n  warmGray: {\n    50: '#fafaf9',\n    100: '#f5f5f4',\n    200: '#e7e5e4',\n    300: '#d6d3d1',\n    400: '#a8a29e',\n    500: '#78716c',\n    600: '#57534e',\n    700: '#44403c',\n    800: '#292524',\n    900: '#1c1917',\n  },\n  trueGray: {\n    50: '#fafafa',\n    100: '#f5f5f5',\n    200: '#e5e5e5',\n    300: '#d4d4d4',\n    400: '#a3a3a3',\n    500: '#737373',\n    600: '#525252',\n    700: '#404040',\n    800: '#262626',\n    900: '#171717',\n  },\n  gray: {\n    50: '#fafafa',\n    100: '#f4f4f5',\n    200: '#e4e4e7',\n    300: '#d4d4d8',\n    400: '#a1a1aa',\n    500: '#71717a',\n    600: '#52525b',\n    700: '#3f3f46',\n    800: '#27272a',\n    900: '#18181b',\n  },\n  coolGray: {\n    50: '#f9fafb',\n    100: '#f3f4f6',\n    200: '#e5e7eb',\n    300: '#d1d5db',\n    400: '#9ca3af',\n    500: '#6b7280',\n    600: '#4b5563',\n    700: '#374151',\n    800: '#1f2937',\n    900: '#111827',\n  },\n  blueGray: {\n    50: '#f8fafc',\n    100: '#f1f5f9',\n    200: '#e2e8f0',\n    300: '#cbd5e1',\n    400: '#94a3b8',\n    500: '#64748b',\n    600: '#475569',\n    700: '#334155',\n    800: '#1e293b',\n    900: '#0f172a',\n  },\n}\n","/**\r\n * A convenience assertion utility, used to validate\r\n * pre-conditions of a routine.\r\n *\r\n * **API**: check(condition, msg): void\r\n *          - throws new Error(msg) WHEN condition is NOT met\r\n *\r\n * **Advanced**: check.prefix(msgPrefix): hof-check\r\n *               - hof-check: a higher-order check function\r\n *               - same API as check(), but prefixes ALL messages\r\n *               - NOTE: msgPrefix is accumulative when invoked\r\n *                       on: hof-check.prefix() ... KOOL!\r\n *\r\n * @param {truthy} condition - a \"truthy\" condition which\r\n * must be satisfied.\r\n *\r\n * @param {string} msg - a message clarifying the condition being\r\n * checked.\r\n * \r\n * @throws {Error} an Error is thrown when the supplied condition is\r\n * NOT met.\r\n */\r\n\r\n// our check() generator:\r\nfunction generateCheck(baseCheckFn, // the base check() function (if any) on which our newly generated function accumulatively based\r\n                       msgPrefix='') {\r\n  const outerMsgPrefix = baseCheckFn ? baseCheckFn.msgPrefix : '';\r\n  const check = (condition, msg) => { // ... the check(condition, msg) function promoted TO our client\r\n    if (!condition) {\r\n      // console.error(`Error: ${outerMsgPrefix + msgPrefix + msg}`); // supplement exception with error log\r\n      throw new Error(outerMsgPrefix + msgPrefix + msg);\r\n    }\r\n  }\r\n  check.msgPrefix = outerMsgPrefix + msgPrefix; // ... retain the accumulative msgPrefixes within our higher-order-functions\r\n  check.prefix = (msgPrefix) => generateCheck(check, msgPrefix); // ... the value-added prefix function\r\n  return check;\r\n}\r\n\r\n// the publicly promoted check function (the outer-most one)\r\nconst check = generateCheck();\r\nexport default check;\r\n\r\n// run this test (in babel REPL) TODO: add jest unit tests\r\n// function outer() {\r\n//   check(1===2, 'plain ole check');\r\n// \r\n//   const checkInner1 = check.prefix('inner1: ');\r\n//   checkInner1(1===2, 'Check it out (should include inner1)');\r\n// \r\n//   const checkInner2 = checkInner1.prefix('inner2: ');\r\n//   checkInner2(1===2, 'Check it out (should include BOTH inner1/inner2)');\r\n// \r\n//   const checkInner3 = checkInner2.prefix('inner3: ');\r\n//   checkInner3(1===2, 'Check it out (should include ALL inner1/inner2/inner3)');\r\n// \r\n//   checkInner2(1===2, 'back to inner2 (should include BOTH inner1/inner2)');\r\n// \r\n//   checkInner1(1===2, 'back to inner1 (should include inner1)');\r\n// \r\n//   check(1===2, 'back to plain ole check');\r\n// }\r\n// \r\n// outer();\r\n","//***\r\n//*** convenience type checkers with ZERO dependencies (i.e. NO lodash)\r\n//***\r\n\r\n// isArray(ref): boolean\r\nexport function isArray(ref) {\r\n  return Array.isArray(ref);\r\n}\r\n\r\n// isBoolean(ref): boolean\r\nexport function isBoolean(ref) {\r\n  return ref === true || ref === false;\r\n}\r\n\r\n// isPlainObject(ref): boolean\r\nexport function isPlainObject(ref) {\r\n  return typeof ref === 'object' && ref.constructor === Object;\r\n}\r\n\r\n// isString(ref): boolean\r\nexport function isString(ref) {\r\n  return typeof ref === 'string' || ref instanceof String;\r\n}\r\n","import twColors        from 'tailwindcss/colors'; // ... peerDependency: tailwindcss\r\nimport check           from './util/check.js';\r\nimport {isArray,\r\n        isBoolean,\r\n        isPlainObject,\r\n        isString}      from './util/typeCheck';\r\n\r\n//***\r\n//*** NOTE: see README for complete and thorough descriptions!\r\n//***\r\n\r\n\r\n// the prefix of all CSS Variables - 'dct': tailwind-dynamic-color-themes\r\nconst prefix = 'dct';\r\n\r\n// the standard shades supported by tailwindcss colors out-of-the-box\r\nconst shades = ['50', '100', '200', '300', '400', '500', '600', '700', '800', '900'];\r\n\r\n// parameter indicator to apply run-time defaults\r\nconst runtimeDefault = 'DCT-runtimeDefault';\r\n\r\n//***\r\n//*** + initDCT(schema, themes, [initialThemeName], [initialInvertShade]): DCT\r\n//***\r\nexport default function initDCT(schema, themes, initialThemeName=runtimeDefault, initialInvertShade=false) {\r\n\r\n  // carve out our \"crucial\" DCT object state\r\n  // NOTE: all DCT object state begins with underbar (as a convention)\r\n  const _schema = schema; // active schema ... alias to initDCT() param, making underbar state consistent\r\n  const _themes = themes; // active themes ... ditto\r\n  let _activeThemeName;   // active themeName   ... maintained by activateTheme()\r\n  let _activeInvertShade; // active invertShade ... ditto\r\n\r\n  // provide basic parameter validation\r\n  // ... additional validation is applied when setup our value-added structures (below)\r\n  const checkParam = check.prefix('initDCT() parameter violation: ');\r\n  // ... schema\r\n  checkParam(schema,          'schema is required');\r\n  checkParam(isArray(schema), 'schema must be an array of strings (context color names)');\r\n  // ... themes\r\n  checkParam(themes,                'themes is required');\r\n  checkParam(isPlainObject(themes), 'themes must be a JSON structure');\r\n\r\n\r\n  // setup our value-added schema structure\r\n  // ... applying additional validation\r\n  // EX: \r\n  //     const _schemaStruct = {\r\n  //       contextColor1: {\r\n  //         multiColorViaShades: true,  // can be supplied by: 'red'\r\n  //     //  singleColor:         false, // OPPOSITE (not used)\r\n  //       },\r\n  //       contextColor2: {\r\n  //         multiColorViaShades: false, // can be supplied by: 'red-700', 'white', HANDLE '#ff52c3' (NOTE: tailwinds 'black'/'white' is inconsistent as it is a single color)\r\n  //     //  singleColor:         true,  // OPPOSITE (not used)\r\n  //       },\r\n  //       ... snip snip\r\n  //     };\r\n  const _totalContextColors = schema.length;\r\n  const _schemaStruct = schema.reduce( (accum, contextColor) => {\r\n\r\n    if (isString(contextColor)) {     // a non-shaded single-color contextColor\r\n      checkParam(!accum[contextColor], `schema contains duplicate contextColor: ${contextColor}`);\r\n      accum[contextColor] = {\r\n        multiColorViaShades: false,\r\n      };\r\n    }\r\n    else if (isArray(contextColor)) { // a multi-color shaded contextColor\r\n      checkParam(contextColor.length===1,   `schema element for shaded contextColor must be a single element \"inner\" array, NOT: ${contextColor.length} element(s) ... EX: ['primary', 'secondary', ['error']]`);\r\n      checkParam(isString(contextColor[0]), `schema element for shaded contextColor must be a single element \"inner\" array of type string, NOT: ${contextColor[0]} ... EX: ['primary', 'secondary', ['error']]`);\r\n      checkParam(!accum[contextColor[0]], `schema contains duplicate contextColor: ${contextColor[0]}`);\r\n      accum[contextColor[0]] = {\r\n        multiColorViaShades: true,\r\n      };\r\n    }\r\n    else {\r\n      checkParam(false, `invalid schema element: ${contextColor} ... expecting a string -or- a string wrapped in an \"inner\" array ... EX: ['primary', 'secondary', ['error']]`);\r\n    }\r\n    return accum;\r\n  }, {}); // ... initial value\r\n\r\n  // insure our schema has at least one context color\r\n  checkParam(schema.length > 0, `schema must contain at least one context color`);\r\n\r\n  // setup our value-added themes structure\r\n  // ... applying additional validation\r\n  // EX: \r\n  //     const _themesArr = [\r\n  //       {\r\n  //         themeName:     'emerald',  // ADDED: field added by US\r\n  //         `clientProps`: `clientValues`,\r\n  //         contextColors: {\r\n  //           primary:   '#046307',    // EX 1: a single custom color via CSS\r\n  //           secondary: 'coolGray',   // EX 2: multiple colors via: a shaded tailwind color\r\n  //           error:     'red-500',    // EX 3: a single color via a tailwind color shade\r\n  //         },\r\n  //         resolvedRealColors: {      // ADDED: field/structure added by US\r\n  //           primary: {               // EX 1: a single custom color via CSS\r\n  //             customColor: \"#ff52c3\",\r\n  //           },\r\n  //           secondary: {             // EX 2: multiple colors via: a shaded tailwind color\r\n  //             twColorName:  \"red\",\r\n  //           },\r\n  //           error: {                 // EX 3: a single color via a tailwind color shade\r\n  //             twColorName:  \"red\",\r\n  //             twColorShade: \"200\",   // ... ONLY supplied for a single shaded color (for black/white use \"dummy-black-white\" because it is NOT referenced in getRealTWColor())\r\n  //           },\r\n  //         },\r\n  //       },\r\n  //       {\r\n  //         ... more themes\r\n  //       },\r\n  //     ];\r\n  const _themesArr = Object.entries(themes).map( ([themeName, themeStruct]) => {\r\n    const checkWithTheme = checkParam.prefix(`theme: '${themeName}' `);\r\n    checkWithTheme(isPlainObject(themeStruct), `must reference a JSON structure`);\r\n    themeStruct.themeName = themeName; // ADDED: field added by US\r\n    checkWithTheme(themeStruct.contextColors,                `must contain a contextColors property`);\r\n    checkWithTheme(isPlainObject(themeStruct.contextColors), `contextColors field must reference a JSON structure`);\r\n\r\n    const resolvedRealColors = themeStruct.resolvedRealColors = {}; // ADDED: field/structure added by US\r\n    \r\n    // validate each contextColor entry in the contextColors structure\r\n    let numContextColorsDefined = 0;\r\n    Object.entries(themeStruct.contextColors).forEach( ([contextColor, realColor]) => {\r\n      const checkWithContextColor = checkWithTheme.prefix(`contextColor: '${contextColor}' `);\r\n\r\n      const realColorStruct = resolvedRealColors[contextColor] = {};\r\n\r\n      // verify realColor is a string\r\n      checkWithContextColor(isString(realColor), `must reference a string-based realColor`);\r\n      const checkWithRealColor = checkWithContextColor.prefix(`realColor: '${realColor}' `);\r\n      realColor = realColor.trim();\r\n\r\n      // verify contextColor is defined in the schema\r\n      checkWithRealColor(_schemaStruct[contextColor], `the contextColor is NOT defined in the schema`);\r\n      numContextColorsDefined++;\r\n\r\n      // interpret the realColor string (various syntaxes: 'red', 'red-400', '#ffd3b9')\r\n      const [colorName, shade, tooManyDashes] = realColor.split('-');\r\n      const checkWithInvalidRealColor = checkWithRealColor.prefix(`invalid realColor: `);\r\n\r\n      // ... EX: 'red-500-ouch': invalid realColor - too many dashes\r\n      if (tooManyDashes) {\r\n        checkWithInvalidRealColor(false, `only a single suffix dash is supported (for a color shade)`);\r\n      }\r\n\r\n      // ... EX: 'red-400': a specific shade of a tailwind color\r\n      else if (shade) {\r\n\r\n        // verify the schema (context color) matches the shade/non-shade indicator (of this real color)\r\n        checkWithInvalidRealColor(_schemaStruct[contextColor].multiColorViaShades===false, `references a single tailwind shaded color (with a dash -), but the schema requires a multi-color shaded context color (without a dash)`);\r\n\r\n        // resolve the twColor/twColorShade to use\r\n        const twColor = twColors[colorName];\r\n        checkWithInvalidRealColor(twColor, `references an invalid tailwind color ... ${colorName} does NOT exist`);\r\n        const twColorShade = twColor[shade];\r\n        checkWithInvalidRealColor(twColorShade, `references an invalid tailwind color shade ... ${shade} does NOT exist`);\r\n\r\n        // VALID: retain our run-time setting\r\n        realColorStruct.twColorName  = colorName;\r\n        realColorStruct.twColorShade = shade;\r\n      }\r\n\r\n      // ... EX: 'red'/'black'/'#ff52c3'\r\n      else if (colorName) {\r\n        // resolve the twColor to use\r\n        const twColor = twColors[colorName];\r\n\r\n        // ... EX: '#ff52c3': NOT a TW color\r\n        if (!twColor) {\r\n          // verify the schema (context color) matches the shade/non-shade indicator (of this real color)\r\n          checkWithInvalidRealColor(_schemaStruct[contextColor].multiColorViaShades===false, `references a single CSS color: '${colorName}', but the schema requires a multi-color shaded context color (which can only be supplied by a tailwind color)`);\r\n\r\n          // ASSUME a VALID CSS Color, and use as-is\r\n          realColorStruct.customColor = colorName;\r\n        }\r\n\r\n        // ... EX: 'black': a special case 'black'/'white' a single color\r\n        else if (isString(twColor)) {\r\n          // verify the schema (context color) matches the shade/non-shade indicator (of this real color)\r\n          checkWithInvalidRealColor(_schemaStruct[contextColor].multiColorViaShades===false, `references a single tailwind color (black/white), but the schema requires a multi-color shaded context color`);\r\n\r\n          // VALID: retain our run-time setting\r\n          realColorStruct.twColorName  = colorName;\r\n          realColorStruct.twColorShade = 'dummy-black-white'; // triggers single color BUT NOT referenced in getRealTWColor() (because of special black/white logic)\r\n        }\r\n        // ... EX: 'red': a shaded tailwind color (or special case 'black'/'white' a single color)\r\n        else {\r\n          // verify the schema (context color) matches the shade/non-shade indicator (of this real color)\r\n          checkWithInvalidRealColor(_schemaStruct[contextColor].multiColorViaShades===true, `references multiple tailwind shaded colors (without a dash -), but the schema requires a single-color non-shaded context color (with a dash)`);\r\n\r\n          // VALID: retain our run-time setting\r\n          realColorStruct.twColorName  = colorName;\r\n        }\r\n      }\r\n      // ... EX: ''\r\n      else {\r\n        checkWithInvalidRealColor(false, `the realColor has NO content`);\r\n      }\r\n\r\n    }); // ... end of contextColors iteration\r\n\r\n    // insure this contextColors section has definitions for all schema colors\r\n    if (numContextColorsDefined !== schema.length) {\r\n      // NOTE: we have already handled contextColor entries that are NOT defined in the schema (above)\r\n      //       ... only thing left is missing contextColor entries (from the schema)\r\n      const themeContextColors = Object.keys(themeStruct.contextColors);\r\n      const missingContextColors = schema.filter( e => !themeContextColors.includes(e) );\r\n      checkWithTheme(false, `theme is missing the following context color definitions: ${missingContextColors}`);\r\n    }\r\n\r\n    // add to our value-added themes array (via map())\r\n    return themeStruct;\r\n\r\n  }); // ... end of themes iteration\r\n\r\n  // insure our themes have at least one theme\r\n  checkParam(_themesArr.length > 0, `themes must contain at least one theme`);\r\n\r\n  // validate initialThemeName parameter, applying run-time defaults (as needed)\r\n  if (initialThemeName === runtimeDefault) {\r\n    initialThemeName = _themesArr[0].themeName; // ... run-time default: first theme\r\n  }\r\n  checkParam(isString(initialThemeName), `initialThemeName (when supplied) must be a string`);\r\n  checkParam(_themes[initialThemeName], `supplied initialThemeName: '${initialThemeName}' IS NOT defined in themes`);\r\n\r\n  // validate initialInvertShade parameter\r\n  checkParam(isBoolean(initialInvertShade), `initialInvertShade (when supplied) must be a boolean`);\r\n\r\n\r\n  //***\r\n  //***   INTERNAL Helper: interpret the real color of a single tailwind color reference (relative to our _activeInvertShade state)\r\n  //*** - getRealTWColor(twColorName, [shade]) realColor\r\n  //***\r\n\r\n  function getRealTWColor(twColorName, shade='500') {\r\n\r\n    // NOTE: Due to the pre-checks done in initDCT(), \r\n    //       there is NO need to check `twColors` error conditions\r\n    //       ... this is a tightly controlled internal helper\r\n\r\n    // resolve the twColor\r\n    // ... will be one of the following:\r\n    //     - '#000'/'#fff': the special TW single colors ('black'/'white' IS: '#000'/'#fff')\r\n    //     - a TW JSON object wrapper of shaded colors: { '50': '#f9fafb', '100': '#f3f4f6', ... }\r\n    // N/A - undefined: a CSS color reference <<< NOT in the context of our usage (see NOTE above)\r\n    const twColor = twColors[twColorName];\r\n\r\n    // the special TW single colors ('black'/'white' IS: '#000'/'#fff')\r\n    // ... when used, we ignore shade\r\n    const twSingleColor = isString(twColor) ? twColor : undefined;\r\n\r\n    // when in `_activeInvertShade` state: invert the color shades\r\n    if (_activeInvertShade) {\r\n      // ... invert TW's single black/white color\r\n      if (twSingleColor) {\r\n        const realColor = invertTWSingleColors[twSingleColor];\r\n        if (!realColor) {\r\n          // UNEXPECTED: expecting to invert black/white, but there is something else in the mix\r\n          //             ... just PUNT and return the un-inverted single color\r\n          console.warn(`tailwind-dynamic-color-themes: UNEXPECTED CONDITION in getRealTWColor(twColorName: '${twColorName}', shade: '${shade}) when inverting color ` + \r\n                       `... expecting to invert black/white, but there is apparently an additional tailwind single color in the mix ` +\r\n                       '... PUNT and use the un-inverted single color');\r\n          return twSingleColor;\r\n        }\r\n        return realColor;\r\n      }\r\n      else {\r\n        // ... invert TW's shaded color\r\n        const realColor = twColor[ invertTWColorShades[shade] ];\r\n        return realColor;\r\n      }\r\n    }\r\n\r\n    // when NOT in `_activeInvertShade` state: use the color as-is\r\n    else {\r\n      const realColor = twSingleColor || twColor[shade];\r\n      return realColor;\r\n    }\r\n  }\r\n\r\n\r\n  //***\r\n  //*** register our app on-load to activate our initialThemeName/initialInvertShade\r\n  //***\r\n  \r\n  // ... conditionally, when executing in browser container\r\n  //     can also run in the Node build process via tailwind.config.js\r\n  if (typeof window !== 'undefined') {\r\n    // use `window.addEventListener()` vs. `window.onload = () => {`\r\n    // ... more robust, allowing client app logic to register their own window.onload events\r\n    window.addEventListener('load', (e) => {\r\n      activateTheme({themeName: initialThemeName, invertShade: initialInvertShade});\r\n    });\r\n  }\r\n\r\n\r\n  //***\r\n  //*** + activateTheme({[themeName], [invertShade]}): [activeThemeName, activeInvertShade]\r\n  //***\r\n\r\n  function activateTheme(namedParams={}) {\r\n\r\n    // validate parameters, applying run-time defaults (as needed)\r\n    const checkParam = check.prefix('activateTheme() parameter violation: ');\r\n    checkParam(isPlainObject(namedParams), `uses named parameters (check the API)`);\r\n    let {themeName=runtimeDefault, invertShade=runtimeDefault, ...unknownNamedArgs} = namedParams;\r\n\r\n    // ... themeName\r\n    if (themeName === runtimeDefault) { // ... apply run-time default: currently active themeName\r\n      themeName = _activeThemeName;\r\n    }\r\n    checkParam(isString(themeName), `themeName (when supplied) must be a string`);\r\n    checkParam(_themes[themeName],  `supplied themeName: '${themeName}' IS NOT defined in themes`);\r\n    // ... invertShade\r\n    if (invertShade === runtimeDefault) { // ... apply run-time default: currently active invertShade setting\r\n      invertShade = _activeInvertShade;\r\n    }\r\n    checkParam(isBoolean(invertShade), `invertShade (when supplied) must be a boolean`);\r\n    // ... unrecognized named parameter\r\n    const unknownArgKeys = Object.keys(unknownNamedArgs);\r\n    checkParam(unknownArgKeys.length === 0,  `unrecognized named parameter(s): ${unknownArgKeys}`);\r\n    // ... unrecognized positional parameter\r\n    //     NOTE: when defaulting entire struct, arguments.length is 0\r\n    checkParam(arguments.length <= 1, `unrecognized positional parameters (only named parameters may be specified) ... ${arguments.length} positional parameters were found`);\r\n\r\n    // NO-OP if NO change has been requested\r\n    if (themeName   === _activeThemeName &&\r\n        invertShade === _activeInvertShade) {\r\n      return [_activeThemeName, _activeInvertShade];\r\n    }\r\n\r\n    // retain the latest state\r\n    _activeThemeName   = themeName;\r\n    _activeInvertShade = invertShade; // IMPORTANT: set this prior to getRealTWColor() invocation (uses this setting)\r\n\r\n    // process the request:\r\n    // set the context-based CSS Vars to the real colors defined by the active theme\r\n\r\n    const theme = _themes[themeName];  // ... our current active theme\r\n    const style = document.body.style; // ... our document's <body> in-line style (used to set CSS Vars)\r\n\r\n    // ... apply changes to our CSS VARS\r\n    Object.entries(theme.resolvedRealColors).forEach( ([contextColorName, realColorStruct]) => {\r\n\r\n      // for a \"real\" CSS customColor: use as-is: a non-shaded single color where inversion is NOT supported\r\n      if (realColorStruct.customColor) {\r\n        style.setProperty(`--${prefix}-${contextColorName}`, realColorStruct.customColor);\r\n      }\r\n\r\n      // for a \"real\" tailwind single color (where shade is provided): promote that single color SUPPORTING inversion\r\n      else if (realColorStruct.twColorShade) {\r\n        style.setProperty(`--${prefix}-${contextColorName}`, getRealTWColor(realColorStruct.twColorName, realColorStruct.twColorShade));\r\n      }\r\n\r\n      // for a \"real\" tailwind multi-color color (where NO shade is provided): promote multi-colors via shade SUPPORTING inversion\r\n      else {\r\n        // ... the DEFAULT ('500' shade)\r\n        style.setProperty(`--${prefix}-${contextColorName}`, getRealTWColor(realColorStruct.twColorName));\r\n        // ... all shades\r\n        shades.forEach( (shade) => {\r\n          style.setProperty(`--${prefix}-${contextColorName}-${shade}`, getRealTWColor(realColorStruct.twColorName, shade));\r\n        });\r\n      }\r\n    });\r\n\r\n    // that's all folks :-)\r\n    return [_activeThemeName, _activeInvertShade];\r\n  }\r\n\r\n\r\n  //***\r\n  //*** + activateNextTheme(): activeThemeName\r\n  //***\r\n\r\n  function activateNextTheme() {\r\n    const activeThemeIndx = _themesArr.findIndex( (theme) => theme.themeName === _activeThemeName );\r\n\r\n    // advance to the next theme (wrapping at end)\r\n    const nextThemeIndx = (activeThemeIndx+1) % _themesArr.length;\r\n    const nextThemeName = _themesArr[nextThemeIndx].themeName;\r\n    activateTheme({themeName: nextThemeName});\r\n\r\n    // beam me up Scotty :-)\r\n    return _activeThemeName; // ... our state has now been updated (via activateTheme())\r\n  }\r\n\r\n\r\n  //***\r\n  //*** + activatePriorTheme(): activeThemeName\r\n  //***\r\n\r\n  function activatePriorTheme() {\r\n    const activeThemeIndx = _themesArr.findIndex( (theme) => theme.themeName === _activeThemeName );\r\n\r\n    // advance to the prior theme (wrapping at start)\r\n    const priorThemeIndx = activeThemeIndx===0 ? _themesArr.length-1 : activeThemeIndx-1;\r\n    const priorThemeName = _themesArr[priorThemeIndx].themeName;\r\n    activateTheme({themeName: priorThemeName});\r\n\r\n    // beam me up Scotty :-)\r\n    return _activeThemeName; // ... our state has now been updated (via activateTheme())\r\n  }\r\n\r\n\r\n  //***\r\n  //*** + toggleInvertShade(): activeInvertShade\r\n  //***\r\n\r\n  function toggleInvertShade() {\r\n    activateTheme({invertShade: !_activeInvertShade});\r\n\r\n    // that was easy :-)\r\n    return _activeInvertShade; // ... our state has now been updated (via activateTheme())\r\n  }\r\n\r\n\r\n  //***\r\n  //*** + getThemes(): Theme[]\r\n  //***\r\n\r\n  function getThemes() {\r\n    // dohhh ...\r\n    return _themesArr;\r\n  }\r\n\r\n\r\n  //***\r\n  //*** + getActiveThemeName(): activeThemeName\r\n  //***\r\n\r\n  function getActiveThemeName() {\r\n    // this is too easy ...\r\n    // ... conditional resolves app-initialization window.onload race condition\r\n    return _activeThemeName===undefined ? initialThemeName : _activeThemeName;\r\n  }\r\n\r\n\r\n  //***\r\n  //*** + getActiveInvertShade(): activeInvertShade\r\n  //***\r\n\r\n  function getActiveInvertShade() {\r\n    // need I say more ...\r\n    // ... conditional resolves app-initialization window.onload race condition\r\n    return _activeInvertShade===undefined ? initialInvertShade : _activeInvertShade;\r\n  }\r\n\r\n\r\n  //***\r\n  //*** + colorConfig(): TWColors\r\n  //***\r\n\r\n  function colorConfig() {\r\n    // generate our JSON color structure ... see: TWColors in README\r\n    const colors = {};\r\n    _schema.forEach( (contextColorRef) => {\r\n      const contextColorName   = isString(contextColorRef) ? contextColorRef : contextColorRef[0];\r\n      const contextColorStruct = _schemaStruct[contextColorName];\r\n\r\n      // for multi-color shaded contextColor ... inject all supported shades\r\n      if (contextColorStruct.multiColorViaShades) {\r\n        const colorNode = colors[contextColorName] = {\r\n          DEFAULT: `var(--${prefix}-${contextColorName})`, // color default\r\n        };\r\n        shades.forEach( (shade) => { // color shades\r\n          colorNode[shade] = `var(--${prefix}-${contextColorName}-${shade})`;\r\n        });\r\n      }\r\n      // for a single-color contextColor ... inject a single color\r\n      else {\r\n        colors[contextColorName] = `var(--${prefix}-${contextColorName})`; // the single color\r\n      }\r\n    });\r\n    \r\n    // that's all folks :-)\r\n    return colors;\r\n  }\r\n\r\n\r\n  //***\r\n  //*** end of initDCT()\r\n  //***\r\n\r\n  // that's all folks :-)\r\n  // ... return our DCT object, from which from which all remaining functionality is promoted :-)\r\n  return {\r\n    activateTheme,\r\n    activateNextTheme,\r\n    activatePriorTheme,\r\n    toggleInvertShade,\r\n    getThemes,\r\n    getActiveThemeName,\r\n    getActiveInvertShade,\r\n    colorConfig,\r\n  };\r\n} // ... end of: initDCT()\r\n\r\n\r\n\r\n//***\r\n//*** helper tables\r\n//***\r\n\r\n// color inverter table for tailwind color shades\r\nconst invertTWColorShades = {\r\n  \"50\":  \"900\", // use a \"close\" entry (we don't have a corresponding entry for 50)\r\n  \"100\": \"900\", \r\n  \"200\": \"800\", \r\n  \"300\": \"700\", \r\n  \"400\": \"600\", \r\n  \"500\": \"500\", \r\n  \"600\": \"400\", \r\n  \"700\": \"500\", \r\n  \"800\": \"600\", \r\n  \"900\": \"100\",\r\n};\r\n\r\n// color inverter table for tailwind's special single colors ('black'/'white' IS: '#000'/'#fff')\r\nconst invertTWSingleColors = {\r\n  [twColors.black]: twColors.white,\r\n  [twColors.white]: twColors.black,\r\n}\r\n","import {initDCT} from '../util/ui/tailwind-dynamic-color-themes/index'; // AI: for some reason, when imported from tailwind.config.js, NodeJS does NOT know how to resolve this WITHOUT index\r\n\r\n// our color schema ...\r\nconst schema = [\r\n  'primaryLight',\r\n  'primary',\r\n  'primaryDark',\r\n\r\n  'secondaryLight',\r\n  'secondary',\r\n  'secondaryDark',\r\n\r\n  'onLight',       // typically black\r\n  'onDark',        // typically white\r\n\r\n  'accentBorder',  // typically a gray tone (e.g. 'coolGray-600')\r\n                   // ... used for borders in SideBar/NavBar/Menu/Dialog/etc.\r\n\r\n  'backdrop',      // universal background \r\n                   // ... can be a gray tone       (e.g. 'coolGray-200')\r\n                   // ... or lighter primary shade (e.g. `${primary}-100`)\r\n                   //     ... lighter that 'primaryLight'\r\n                   //         providing NOT too much of same color\r\n];\r\n\r\n// helper that generates the bulk of our contextColors ...\r\nfunction gen(primary, secondary) {\r\n  return {\r\n    'primaryLight':   `${primary}-300`,\r\n    'primary':        `${primary}-500`,\r\n    'primaryDark':    `${primary}-900`,\r\n\r\n    'secondaryLight': `${secondary}-300`,\r\n    'secondary':      `${secondary}-500`,\r\n    'secondaryDark':  `${secondary}-900`,\r\n\r\n    'onLight':        'black',\r\n    'onDark':         'white',\r\n\r\n    'accentBorder':   'coolGray-600',\r\n\r\n    'backdrop':       `${primary}-100`, // or: 'coolGray-200'\r\n  };\r\n}\r\n\r\n// our color themes ...\r\nconst themes = {\r\n  'Cool Gray':   { contextColors: gen('coolGray', 'orange'), },\r\n  'Black/White': {\r\n    contextColors: {\r\n      ...gen('coolGray', 'red'), // ... base colors\r\n      'primaryLight':   'white', // ... overrides:\r\n      'primaryDark':    'black',\r\n      'backdrop':       'white',\r\n    }\r\n  },\r\n  'Amber':   { contextColors: gen('amber',     'indigo'), },\r\n//'Emerald': { contextColors: gen('emerald',   'red'),    },\r\n  'Teal':    { contextColors: gen('teal',      'rose'),   },\r\n//'Blue':    { contextColors: gen('lightBlue', 'orange'), },\r\n  'Cyan':    { contextColors: gen('cyan',      'orange'), },\r\n//'Red':     { contextColors: gen('red',       'green'),  },\r\n//'Rose':    { contextColors: gen('rose',      'green'),  },\r\n//'Pink':    { contextColors: gen('pink',      'lime'),   },\r\n};\r\n\r\n\r\n//***\r\n//*** Initialize tailwind-dynamic-color-themes -and- promote the DCT object to our app\r\n//***\r\n\r\nconst initialThemeName   = 'Cool Gray'; // AI: ENHANCE TO pull from local storage\r\nconst initialInvertShade = true;        //     ditto\r\n\r\nconst DCT = initDCT(schema, themes, initialThemeName, initialInvertShade);\r\nexport default DCT;\r\n","import { noop, safe_not_equal, subscribe, run_all, is_function } from '../internal/index.mjs';\nexport { get_store_value as get } from '../internal/index.mjs';\n\nconst subscriber_queue = [];\n/**\n * Creates a `Readable` store that allows reading by subscription.\n * @param value initial value\n * @param {StartStopNotifier}start start and stop notifications for subscriptions\n */\nfunction readable(value, start) {\n    return {\n        subscribe: writable(value, start).subscribe\n    };\n}\n/**\n * Create a `Writable` store that allows both updating and reading by subscription.\n * @param {*=}value initial value\n * @param {StartStopNotifier=}start start and stop notifications for subscriptions\n */\nfunction writable(value, start = noop) {\n    let stop;\n    const subscribers = [];\n    function set(new_value) {\n        if (safe_not_equal(value, new_value)) {\n            value = new_value;\n            if (stop) { // store is ready\n                const run_queue = !subscriber_queue.length;\n                for (let i = 0; i < subscribers.length; i += 1) {\n                    const s = subscribers[i];\n                    s[1]();\n                    subscriber_queue.push(s, value);\n                }\n                if (run_queue) {\n                    for (let i = 0; i < subscriber_queue.length; i += 2) {\n                        subscriber_queue[i][0](subscriber_queue[i + 1]);\n                    }\n                    subscriber_queue.length = 0;\n                }\n            }\n        }\n    }\n    function update(fn) {\n        set(fn(value));\n    }\n    function subscribe(run, invalidate = noop) {\n        const subscriber = [run, invalidate];\n        subscribers.push(subscriber);\n        if (subscribers.length === 1) {\n            stop = start(set) || noop;\n        }\n        run(value);\n        return () => {\n            const index = subscribers.indexOf(subscriber);\n            if (index !== -1) {\n                subscribers.splice(index, 1);\n            }\n            if (subscribers.length === 0) {\n                stop();\n                stop = null;\n            }\n        };\n    }\n    return { set, update, subscribe };\n}\nfunction derived(stores, fn, initial_value) {\n    const single = !Array.isArray(stores);\n    const stores_array = single\n        ? [stores]\n        : stores;\n    const auto = fn.length < 2;\n    return readable(initial_value, (set) => {\n        let inited = false;\n        const values = [];\n        let pending = 0;\n        let cleanup = noop;\n        const sync = () => {\n            if (pending) {\n                return;\n            }\n            cleanup();\n            const result = fn(single ? values[0] : values, set);\n            if (auto) {\n                set(result);\n            }\n            else {\n                cleanup = is_function(result) ? result : noop;\n            }\n        };\n        const unsubscribers = stores_array.map((store, i) => subscribe(store, (value) => {\n            values[i] = value;\n            pending &= ~(1 << i);\n            if (inited) {\n                sync();\n            }\n        }, () => {\n            pending |= (1 << i);\n        }));\n        inited = true;\n        sync();\n        return function stop() {\n            run_all(unsubscribers);\n            cleanup();\n        };\n    });\n}\n\nexport { derived, readable, writable };\n","<script>\r\n // FULL EXAMPLE -with- tailwind usage\r\n //\r\n //      <Icon name=\"folder_open\"\r\n //            title=\"my title\"\r\n //            class=\"bg-gray-800 text-gray-400\" ... now passes through classes - can add tailwind colors ETC here\r\n //                                                  NOTE: text-2xl seems to be the DEFAULT size (hmmm)\r\n //                                                  ... BECAUSE .material-icons makes font-size: 24px (which is 1.5 the size of tw fonts - 16px)\r\n //            on:click={sideBar.toggle}\r\n //\r\n //            size=\"1.5rem\"        ... OLD non-tailwind size override\r\n //                                     NOTE: 1.5rem seems to be the DEFAULT (hmmm)\r\n //                                           ... BECAUSE .material-icons makes font-size: 24px (which is 1.5 the size of tw fonts - 16px)\r\n //\r\n //            style=\"whatever\"     ... OLD non-tailwind styling option\r\n //      />\r\n //\r\n // AI: update TOOLING.md for \"Material Icon Setup\" (once we decide HOW to resolve CSS conflicts with \"css specificity\"\r\n //     1. install material-icons\r\n //        - public/index.html\r\n //          =================\r\n //          ...\r\n //          <!-- KJB: Material UI Icons (used by src/util/ui/Icon.svelte)  -->\r\n //          <link rel=\"stylesheet\" href=\"https://fonts.googleapis.com/icon?family=Material+Icons\">\r\n //        - network overhead (from <link>):\r\n //            1 kb: https://fonts.googleapis.com/icon?family=Material+Icons\r\n //          101 kb: https://fonts.gstatic.com/s/materialicons/v78/flUhRq6tzZclQEJ-Vdg-IuiaDsNc.woff2\r\n //        - NOTE: Can specify which of the icon themes are desired\r\n //          * Filled, Outlined, Rounded, Two-Tone, Sharp (choose the one you want):\r\n //            <link href=\"https://fonts.googleapis.com/css?family=Material+Icons|Material+Icons+Outlined|Material+Icons+Two+Tone|Material+Icons+Round|Material+Icons+Sharp\" rel=\"stylesheet\">\r\n //          * and change the material-icons css class reference (in Icon.svelte) to:\r\n //            - material-icons\r\n //            - material-icons-outlined\r\n //            - material-icons-two-tone\r\n //            - material-icons-round\r\n //            - material-icons-sharp\r\n //     2. referenced in app component: src/util/ui/Icon.svelte\r\n //     3. resolve tailwind/material-icons css \"css specificity\" conflicts\r\n //        a. tailwind.config.js\r\n //           ==================\r\n //           //          ... \r\n //           // KJB: allow tailwind css classes to override others (ex: material-icons)\r\n //           important: true,\r\n //        b. ALTERNATE: use selector strategy\r\n //           ... see: https://tailwindcss.com/docs/configuration#selector-strategy\r\n //\r\n // AI: CONSIDER: adding general tailwind classes ALL the time\r\n //     GENERAL: select-none cursor-default (MUST resolve conflict with button cursor-pointer)\r\n // \r\n // AI: CONSIDER: adding support for asButton option\r\n //     - adds needed tailwind classes PROB: some require alternate color (unknown by util)\r\n //       BUTTON RELATED:  cursor-pointer hover:text-white (client-supplied color)\r\n //                        NOTE: tailwind typically addes focus: directives on <input> buttons\r\n //                              FOCUS: is only applicable on button or input etc (text cannot have focus)\r\n //     - alternate: provide <IconButton> that wraps <Button>\r\n\r\n export let name;       // from Material Design icon names (https://material.io/resources/icons/)\r\n                        // - use: 'NONE' for NO icon\r\n                        // - DEPENDANCY: https://fonts.googleapis.com/icon?family=Material+Icons\r\n\r\n export let size = '';  // optional one-off size override ('1.4rem', '80%', 'small', etc.)\r\n                        //         KEY: In this context, it is TRUELY GLOBAL, so be careful\r\n                        //           * :global(.material-icons) {\r\n                        //\t            font-size: 1.4rem;\r\n                        //           }\r\n\r\n export let style = ''; // OPTIONAL: inline styling\r\n\r\n let clazz = '';        // OPTIONAL: additional css classes (nice for tailwind)\r\n export {clazz as class};\r\n\r\n // provide optional one-off size override\r\n $: style += size ? ` font-size: ${size};` : '';\r\n // $: console.log(`xx Icon: style=\"${style}\"`);\r\n</script>\r\n\r\n<!-- $$restProps pass through things like title=\"Tootip here\" -->\r\n{#if name !== 'NONE'}\r\n  <i class=\"material-icons {clazz}\" {style} on:click {...$$restProps}>{name}</i>\r\n{/if}\r\n","<script context=\"module\">\r\n // PUBLIC API is provided through a \"module scoped\" sideBar custom store\r\n // - this is possible because <SideBar> is a \"singleton\" component ... only one instance is allowed\r\n // - sideBar Custom Store:\r\n //   * Store API:\r\n //     + open():   void ... open  SideBar\r\n //     + close():  void ... close SideBar\r\n //     + toggle(): void ... toggle SideBar open/close\r\n //   * Store Value:\r\n //     {\r\n //       isOpen: boolean, // open: true, closed: false\r\n //       width:  int,     // actual SideBar width (user can change)\r\n //                        // ... needed to offset <AppContainer> for OPEN <SideBar>\r\n //     }\r\n\r\n // NOTE: Currently ALL default semantics are defined in this module\r\n //       - this is FINE if <SideBar> is considered part of our app\r\n //       - AI: If if however we want to make <SideBar> a reusable component, this is a Code Smell :-(\r\n\r\n // AI: CONSIDER if we want <SideBar> to be a reusable component\r\n //     - determine HOW content is supplied\r\n //       OP0: component parameters (such as header content, etc.)\r\n //       OP1: svelte slots\r\n //       OP2: registration API (useful for dynamic run-time resources - as in visualize-it)\r\n //       OP3: combination of OP1/OP2\r\n\r\n import {writable} from 'svelte/store';\r\n\r\n // promote our sideBar PUBLIC API through this \"module scoped\" custom store\r\n const initialOpen  = true; // AI: adjust from app-specific retention (local storage, URL hash, etc.)\r\n const initialWidth = 250;  // AI: adjust from app-specific retention (local storage, URL hash, etc.)\r\n const {subscribe, set, update} = writable({\r\n   isOpen: initialOpen,\r\n   width:  initialWidth,\r\n });\r\n export const sideBar = { // our custom store (which is the SideBar PUBLIC API)\r\n   subscribe,\r\n   open:   () => update( (state) => ({...state, isOpen: true})  ),\r\n   close:  () => update( (state) => ({...state, isOpen: false}) ),\r\n   toggle: () => update( (state) => ({...state, isOpen: !state.isOpen}) ),\r\n };\r\n\r\n // AI: OVERKILL: insure SideBar has been instantiated (may be some timing issues here)\r\n // AI: OVERKILL: restrict multiple instances\r\n</script>\r\n\r\n<script>\r\n // <SideBar>\r\n //   - SideBar Menu Container (i.e. LeftNav)\r\n //   - a \"singleton\" component ... only one instance is allowed\r\n //   - fills entire height of browser window\r\n //     * header is fixed (at top)\r\n //     * content is independently scrollable\r\n //   - flex container (flex-direction: col) of following:\r\n //     * <SideBarItem> ... multiple items\r\n //   - adjusts left position for visibility (open/close)\r\n //     * via inline style.left\r\n //   - SideBar width is adjustable (BY user via drag operation)\r\n import {onMount}  from 'svelte';\r\n import Icon       from '../util/ui/Icon.svelte';\r\n\r\n let sideBarElm;\r\n\r\n // control SideBar visibility -AND- dynamic width changes\r\n // NOTE: reflexivity based on changes to: `$sideBar.isOpen` -and- `$sideBar.width` (our. the dependencies)\r\n $: if (sideBarElm) { // ... conditional accounts for an `undefined` sideBarElm (till it is bound)\r\n   // adjust dynamic width changes\r\n   sideBarElm.style.width = `${$sideBar.width}px`;\r\n\r\n   // adjust open/close\r\n   // - when opened: anchor it at left (0)\r\n   // - when closed: shove it to the far left (out of sight) using negative coordinates\r\n   sideBarElm.style.left  = $sideBar.isOpen ? '0' : `-${$sideBar.width}px`;\r\n }\r\n\r\n // monitor SideBar width changes\r\n // ... in onMount() to accommodate sideBarElm binding\r\n onMount( () => {\r\n   const ro = new ResizeObserver( (entries) => {\r\n     // NOTE: Because we only monitor ONE element, we bypass `entries`\r\n     //       and go straight to the horses mouth\r\n     const newWidth_withScroll = sideBarElm.offsetWidth;\r\n     const newWidth_noScroll   = sideBarElm.clientWidth;\r\n     // console.log(`XX our SideBar width has changed!!!`, {newWidth_withScroll, newWidth_noScroll});\r\n\r\n     // reflexively update our width change\r\n     update( (state) => ({...state, width: newWidth_withScroll}) );\r\n   });\r\n   ro.observe(sideBarElm); // ... there is a second param that specifies which box model to adhear to (default: content-box)\r\n\r\n   // cleanup - on component desctuction\r\n   return () => {\r\n     ro.disconnect();\r\n   };\r\n });\r\n</script>\r\n\r\n<!-- SideBar Flex container WITH full height of screen, and resize control --> \r\n<div class=\"LAYOUT  absolute h-screen flex flex-col resize-x overflow-x-hidden transition-left \r\n            MISC    pb-2 bg-primaryLight overflow-y-auto\r\n            DIVIDER border-accentBorder border-r-2\"\r\n     bind:this={sideBarElm}>\r\n\r\n  <!-- SideBar Header (fixed height h-14 coorelates with height in <NavBar>) -->\r\n  <div class=\"LAYOUT flex-none h-14\r\n              MISC   px-4 bg-primaryLight\"> <!-- BORDER border-accentBorder border-b-2 -->\r\n    <div class=\"text-onLight\r\n                flex items-center px-2 py-3 text-base font-medium italic\r\n                CURSOR  select-none\">\r\n      Select a Demo ...\r\n    </div>\r\n  </div>\r\n\r\n  <!-- SideBarItems WITH it's independent scroll bars -->\r\n  <nav class=\"LAYOUT flex-1 overflow-y-auto\r\n              MISC   p-2 space-y-1\"\r\n       aria-label=\"Sidebar\">\r\n\r\n    <!-- Selected Sample -->\r\n    <span class=\"SELECTED-COLOR  bg-primary text-onDark\r\n                 SELECTED-BORDER border-secondary border-l-8\r\n                 CURSOR  select-none cursor-pointer\r\n                 OTHER group flex items-center px-2 py-2 text-sm font-medium rounded-md\">\r\n      <!-- Selected Icon -->\r\n      <Icon name=\"home\"\r\n            class=\"mr-3\r\n                   SELECTED-COLOR text-primaryLight\"/>\r\n      SEL: Dashboard\r\n      <!-- Selected Notice -->\r\n      <span class=\"SELECTED-COLOR bg-primaryLight text-onLight\r\n                   ml-auto inline-block py-0.5 px-3 text-xs font-medium rounded-full\">\r\n        2\r\n      </span>\r\n    </span>\r\n\r\n    <!-- Non-Selected Sample -->\r\n    <span class=\"NON-SELECTED-COLOR text-onLight\r\n                 NON-SELECTED-BORDER  border-transparent border-l-8\r\n                 HOVER hover:bg-primary hover:text-onDark\r\n                 CURSOR  select-none cursor-pointer\r\n                 OTHER group flex items-center px-2 py-2 text-sm font-medium rounded-md\">\r\n      <!-- Non-Selected Icon -->\r\n      <Icon name=\"people\"\r\n            class=\"mr-3 \r\n                   PRIMARY-COLOR text-primary\r\n                   HOVER-COLOR   group-hover:text-primaryLight\"/>\r\n      NON-SEL: Team\r\n      <!-- Non-Selected Notice -->\r\n      <span class=\"PRIMARY-COLOR             bg-primaryDark              text-onDark\r\n                   HOVER-COLOR   group-hover:bg-primaryLight group-hover:text-onLight\r\n                   ml-auto inline-block py-0.5 px-3 text-xs font-medium rounded-full\">\r\n        3\r\n      </span>\r\n    </span>\r\n\r\n    <!-- With expandable sections -->\r\n    <span class=\"NON-SELECTED-COLOR text-onLight\r\n                 NON-SELECTED-BORDER  border-transparent border-l-8\r\n                 HOVER hover:bg-primary hover:text-onDark\r\n                 CURSOR  select-none cursor-pointer\r\n                 OTHER group flex items-center px-2 py-2 text-sm font-medium rounded-md\">\r\n      <Icon name=\"folder\"\r\n            class=\"mr-3 \r\n                   PRIMARY-COLOR text-primary\r\n                   HOVER-COLOR   group-hover:text-primaryLight\"/>\r\n      Projects\r\n      <!-- KJB: ml-auto moves to right (auto receives it's share of unused space) -->\r\n      <!--      JUST LIKE: mx-auto would center in remaining space -->\r\n      <Icon name=\"expand_more\"\r\n            class=\"ml-auto \r\n                   PRIMARY-COLOR text-primary\r\n                   HOVER-COLOR   group-hover:text-primaryLight\"/>\r\n    </span>\r\n\r\n    <!-- Expandable link section, ?? show/hide based on state -->\r\n    <div class=\"space-y-1\">\r\n\r\n      <span class=\"NON-SELECTED-COLOR text-onLight\r\n                   NON-SELECTED-BORDER  border-transparent border-l-8\r\n                   HOVER hover:bg-primary hover:text-onDark\r\n                   CURSOR  select-none cursor-pointer\r\n                   OTHER group flex items-center pl-11 px-2 py-2 text-sm font-medium rounded-md\">\r\n        Overview\r\n      </span>\r\n\r\n      <span class=\"text-onLight\r\n                   border-transparent border-l-8\r\n                   hover:bg-primary hover:text-onDark\r\n                   CURSOR  select-none cursor-pointer\r\n                   group flex items-center pl-11 px-2 py-2 text-sm font-medium rounded-md\">\r\n        Members\r\n      </span>\r\n\r\n      <span class=\"text-onLight\r\n                   border-transparent border-l-8\r\n                   hover:bg-primary hover:text-onDark\r\n                   CURSOR  select-none cursor-pointer\r\n                   group flex items-center pl-11 px-2 py-2 text-sm font-medium rounded-md\">\r\n        Calendar\r\n      </span>\r\n\r\n      <span class=\"text-onLight\r\n                   border-transparent border-l-8\r\n                   hover:bg-primary hover:text-onDark\r\n                   CURSOR  select-none cursor-pointer\r\n                   group flex items-center pl-11 px-2 py-2 text-sm font-medium rounded-md\">\r\n        Settings\r\n      </span>\r\n    </div>\r\n\r\n  </nav>\r\n</div>\r\n\r\n\r\n<style>\r\n /* carve out our own transition style (rather than customize tailwind for left ONLY property) */\r\n /* NOTE: tailwind usage of `transition-all duration-500` THWARTS resizing by user dragging (unsure why) */\r\n .transition-left {\r\n   transition: left 0.5s; /* NOTE: duration should match animation in <AppContainer> */\r\n }\r\n</style>\r\n","<script>\r\n // <ThemeSelector>\r\n //   - Theme Selector Control\r\n import {onMount} from 'svelte';\r\n import Icon      from '../util/ui/Icon.svelte';\r\n import DCT       from './colorTheme';\r\n\r\n let theme;\r\n onMount( () => {\r\n   theme = DCT.getActiveThemeName();\r\n });\r\n</script>\r\n\r\n<span class=\"text-onLight\r\n             HOVER   hover:bg-primary hover:text-onDark\r\n             CURSOR  select-none cursor-pointer\r\n             OTHER   mr-1 px-3 py-2 rounded-md text-sm font-medium\"\r\n      title=\"Adjust Theme Color\">\r\n\r\n  <Icon name=\"arrow_back_ios\"\r\n        title=\"Prior Theme\"\r\n        size=\"100%\"\r\n        class=\"hover:text-primaryDark\"\r\n        on:click={() => theme = DCT.activatePriorTheme()}/>\r\n\r\n  {theme}\r\n\r\n  <Icon name=\"arrow_forward_ios\"\r\n        title=\"Next Theme\"\r\n        size=\"100%\"\r\n        class=\"hover:text-primaryDark\"\r\n        on:click={() => theme = DCT.activateNextTheme()}/>\r\n</span>\r\n","<script>\r\n // <ThemeInversionSelector>\r\n //   - Theme Inversion Selector Control\r\n import {onMount} from 'svelte';\r\n import Icon      from '../util/ui/Icon.svelte';\r\n import DCT       from './colorTheme';\r\n\r\n let inversion;\r\n onMount( () => {\r\n   inversion = DCT.getActiveInvertShade();\r\n });\r\n</script>\r\n\r\n<div class=\"text-onLight\r\n            CURSOR  select-none cursor-pointer\r\n            OTHER   mr-1 px-3 py-2 rounded-md text-sm font-medium\"\r\n     title=\"Toggle Dark/Light\"\r\n     on:click={() => inversion = DCT.toggleInvertShade()}>\r\n\r\n  <!--  toggle indicator -->\r\n  <span class=\"bg-primaryLight\r\n               relative inline-flex flex-shrink-0\r\n               h-3 w-7 border-2 border-transparent rounded-full cursor-pointer\r\n               transition-colors ease-in-out duration-200\r\n               outline-none ring-2 ring-offset-2 ring-secondary\">\r\n    <span class=\"{inversion ? 'translate-x-4' : 'translate-x-0'}\r\n                 pointer-events-none\r\n                 inline-block h-2 w-2\r\n                 rounded-full bg-secondary shadow transform ring-0\r\n                 transition ease-in-out duration-200\"/>\r\n  </span>\r\n\r\n  &nbsp; Dark\r\n</div>\r\n","<script>\r\n // <NavBar>\r\n //   - NavBar Container\r\n //   - a \"singleton\" component ... only one instance is allowed\r\n //   - height coorelates with height in <SideBar> header\r\n //     * is instiated at top of page (see: <AppContainer>)\r\n import {sideBar}              from './SideBar.svelte';\r\n import ThemeSelector          from './ThemeSelector.svelte';\r\n import ThemeInversionSelector from './ThemeInversionSelector.svelte';\r\n import Icon                   from '../util/ui/Icon.svelte';\r\n</script>\r\n\r\n<!-- NavBar\r\n     - height correlates with height in <SideBar> header (when single line)\r\n       ... accomplished here with py (below)\r\n     - the flex-wrap (below) prevents NavBar from exceeding browser window width\r\n       ... preventing browser-based scroll bars\r\n       ... we want all scrolling to occur within sub-panels\r\n           ALLOWING our NavBar to always be visible at the top of our app\r\n -->\r\n<nav class=\"flex-none bg-primaryLight \r\n            DIVIDER border-accentBorder border-b-2\">\r\n  <div class=\"flex flex-wrap justify-between px-3 py-2.5\">\r\n\r\n    <!-- Left Section of NavBar -->\r\n    <div class=\"flex\">\r\n      <div class=\"ml-1 flex items-center space-x-2\">\r\n        <Icon name=\"menu\"\r\n              title=\"Toggle SideBar\"\r\n              class=\"PRIMARY-COLOR text-primary\r\n                     HOVER-COLOR   hover:text-primaryDark\r\n                     CURSOR        select-none cursor-pointer\"\r\n              on:click={sideBar.toggle}/>\r\n\r\n        <!-- Selected Sample -->\r\n        <span class=\"SELECTED-COLOR  bg-primary text-onDark\r\n                     CURSOR          select-none cursor-pointer\r\n                     OTHER           px-3 py-2 rounded-md text-sm font-medium\">\r\n          Dashboard\r\n        </span>\r\n\r\n        <!-- Non-Selected Samples -->\r\n        <span class=\"NON-SELECTED-COLOR text-onLight\r\n                     HOVER              hover:bg-primary hover:text-onDark\r\n                     CURSOR          select-none cursor-pointer\r\n                     OTHER              px-3 py-2 rounded-md text-sm font-medium\">\r\n          Team\r\n        </span>\r\n        <span class=\"NON-SELECTED-COLOR text-onLight\r\n                     HOVER              hover:bg-primary hover:text-onDark\r\n                     CURSOR             select-none cursor-pointer\r\n                     OTHER              px-3 py-2 rounded-md text-sm font-medium\">\r\n          Projects\r\n        </span>\r\n      </div>\r\n    </div>  <!-- end of ... Left Section of NavBar -->\r\n\r\n    <!-- Right Section of NavBar -->\r\n    <div class=\"flex items-center\">\r\n      <div class=\"ml-4 flex-shrink-0 flex items-center\">\r\n\r\n        <ThemeSelector/>\r\n\r\n        <ThemeInversionSelector/>\r\n\r\n        <Icon name=\"notifications\"\r\n              class=\"PRIMARY-COLOR text-primary\r\n                     HOVER-COLOR   hover:text-primaryDark\r\n                     CURSOR        select-none cursor-pointer\"/>\r\n\r\n        <!-- Profile dropdown -->\r\n        <div class=\"ml-3 relative\">\r\n          <button class=\"bg-secondary\r\n                         flex text-sm rounded-full\r\n                         focus:outline-none focus:ring-2 focus:ring-offset-2 focus:ring-offset-secondaryDark focus:ring-secondaryLight\"\r\n                  id=\"user-menu\">\r\n            <Icon name=\"person\"\r\n                  class=\"PRIMARY-COLOR text-primary\r\n                         HOVER-COLOR   hover:text-primaryDark\r\n                         CURSOR        select-none cursor-pointer\"/>\r\n          </button>\r\n          <!--\r\n               Profile dropdown panel, show/hide based on dropdown state.\r\n\r\n               Entering: \"transition ease-out    duration-200\"\r\n               From:     \"transform  opacity-0   scale-95\"\r\n               To:       \"transform  opacity-100 scale-100\"\r\n               Leaving:  \"transition ease-in     duration-75\"\r\n               From:     \"transform  opacity-100 scale-100\"\r\n               To:       \"transform  opacity-0   scale-95\"\r\n             -->\r\n          <div class=\"origin-top-right absolute right-0 mt-2 w-48 rounded-md shadow-lg py-1\r\n                      bg-primaryLight\r\n                      ring-2 ring-accentBorder ring-opacity-5\r\n                      CONTENT-RELATED text-sm font-bold select-none cursor-pointer\"\r\n               role=\"menu\"\r\n               aria-orientation=\"vertical\"\r\n               aria-labelledby=\"user-menu\">\r\n            <span class=\"block px-4 py-2 text-onLight hover:bg-primary hover:text-onDark\" role=\"menuitem\">Your Profile</span>\r\n            <span class=\"block px-4 py-2 text-onLight hover:bg-primary hover:text-onDark\" role=\"menuitem\">Settings</span>\r\n            <span class=\"block px-4 py-2 text-onLight hover:bg-primary hover:text-onDark\" role=\"menuitem\">Sign Out</span>\r\n          </div>\r\n        </div>\r\n      </div>\r\n    </div> <!-- end of ... Right Section of NavBar -->\r\n\r\n  </div>\r\n</nav>\r\n\r\n","<script>\r\n // <AppContainer>\r\n //   - Full Application Container (WITH <SideBar>)\r\n //   - fills entire width/height of browser window\r\n //   - flex container (flex-direction: col) of following:\r\n //     * <NavBar>  ... Navigation Bar\r\n //     * <TabBar>  ... OPTIONAL (not in this app)\r\n //     * <AppMain> ... Scrollable container of Primary App Content\r\n //   - adjusts left position to account for <SideBar>\r\n //     * via inline style.marginLeft\r\n //     * interacts directly with <SideBar> for this interaction\r\n import SideBar,\r\n        {sideBar} from './SideBar.svelte';\r\n import NavBar    from './NavBar.svelte';\r\n import AppMain   from './AppMain.svelte';\r\n\r\n let appContainerElm;\r\n\r\n // adjust <AppContainer> left-offset to accomidate SideBar (when open)\r\n // ... reflexively updated when a: open/close, and b: SideBar width changes\r\n $: if (appContainerElm) { // ... conditional accounts for an `undefined` appContainerElm (till it is bound)\r\n   appContainerElm.style.marginLeft = $sideBar.isOpen ? `${$sideBar.width}px`: '0px';     \r\n }\r\n</script>\r\n\r\n<!-- our <SideBar> --> \r\n<SideBar/>\r\n\r\n<!-- our <AppContainer> --> \r\n<!-- outer div needed to anchor full width/height of screen -->\r\n<div class=\"w-screen h-screen bg-backdrop\">\r\n  <!-- inner div provides flex container WITH full height of container, and dynamic adjustments for <SideBar> -->\r\n  <div class=\"h-full flex flex-col transition-margin-left\"\r\n       bind:this={appContainerElm}>\r\n\r\n    <NavBar/>\r\n\r\n    <!-- place <TabBar> here (if needed)\r\n    <div class=\"flex-none\">\r\n      SIMULATE TabBar\r\n    </div>\r\n    -->\r\n\r\n    <AppMain/>\r\n\r\n  </div>\r\n</div>\r\n\r\n<style>\r\n /* carve out our own style (rather than customize tailwind for margin-left ONLY property) */\r\n .transition-margin-left {\r\n   transition: margin-left 0.5s; /* NOTE: duration should match animation in <SideBar> */\r\n }\r\n</style>\r\n","import Main from './Main.svelte';\n\nconst main = new Main({\n\ttarget: document.body,\n});\n\nexport default main;\n"],"names":["noop","assign","tar","src","k","run","fn","blank_object","Object","create","run_all","fns","forEach","is_function","thing","safe_not_equal","a","b","component_subscribe","component","store","callback","$$","on_destroy","push","callbacks","unsub","subscribe","unsubscribe","compute_rest_props","props","keys","rest","Set","has","append","target","node","appendChild","insert","anchor","insertBefore","detach","parentNode","removeChild","element","name","document","createElement","text","data","createTextNode","space","listen","event","handler","options","addEventListener","removeEventListener","attr","attribute","value","removeAttribute","getAttribute","setAttribute","set_attributes","attributes","descriptors","getOwnPropertyDescriptors","__proto__","key","style","cssText","set","set_data","wholeText","current_component","set_current_component","onMount","Error","get_current_component","on_mount","dirty_components","binding_callbacks","render_callbacks","flush_callbacks","resolved_promise","Promise","resolve","update_scheduled","add_render_callback","flushing","seen_callbacks","flush","i","length","update","pop","add","clear","fragment","before_update","dirty","p","ctx","after_update","outroing","transition_in","block","local","delete","transition_out","o","outros","c","d","create_component","mount_component","m","new_on_destroy","map","filter","destroy_component","detaching","make_dirty","then","fill","init","instance","create_fragment","not_equal","parent_component","bound","context","Map","skip_bound","ready","ret","hydrate","nodes","Array","from","childNodes","children","l","intro","SvelteComponent","[object Object]","this","$destroy","type","index","indexOf","splice","$$props","obj","$$set","black","white","rose","50","100","200","300","400","500","600","700","800","900","pink","fuchsia","purple","violet","indigo","blue","lightBlue","cyan","teal","emerald","green","lime","yellow","amber","orange","red","warmGray","trueGray","gray","coolGray","blueGray","check","generateCheck","baseCheckFn","msgPrefix","outerMsgPrefix","condition","msg","prefix","isArray","ref","isBoolean","isPlainObject","constructor","isString","String","shades","runtimeDefault","invertTWColorShades","invertTWSingleColors","twColors","gen","primary","secondary","primaryLight","primaryDark","secondaryLight","secondaryDark","onLight","onDark","accentBorder","backdrop","DCT","schema","themes","initialThemeName","initialInvertShade","_schema","_themes","_activeThemeName","_activeInvertShade","checkParam","_schemaStruct","reduce","accum","contextColor","multiColorViaShades","_themesArr","entries","themeName","themeStruct","checkWithTheme","contextColors","resolvedRealColors","numContextColorsDefined","realColor","checkWithContextColor","realColorStruct","checkWithRealColor","trim","colorName","shade","tooManyDashes","split","checkWithInvalidRealColor","twColor","twColorName","twColorShade","customColor","themeContextColors","missingContextColors","e","includes","getRealTWColor","twSingleColor","undefined","console","warn","activateTheme","namedParams","invertShade","unknownNamedArgs","unknownArgKeys","arguments","theme","body","contextColorName","setProperty","window","activateNextTheme","nextThemeIndx","findIndex","activatePriorTheme","activeThemeIndx","priorThemeIndx","toggleInvertShade","getThemes","getActiveThemeName","getActiveInvertShade","colorConfig","colors","contextColorRef","colorNode","DEFAULT","initDCT","Cool Gray","Black/White","Amber","Teal","Cyan","subscriber_queue","levels","updates","to_null_out","accounted_for","$$scope","n","size","clazz","result","slice","start","stop","subscribers","new_value","run_queue","s","invalidate","subscriber","writable","isOpen","width","sideBar","open","state","close","toggle","sideBarElm","ro","ResizeObserver","newWidth_withScroll","offsetWidth","clientWidth","observe","disconnect","$sideBar","left","inversion","appContainerElm","marginLeft"],"mappings":"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"}